{"version":3,"sources":["assets/background.jpg","components/ComponentStyles.js","services/WEUtils.js","components/TopBar.js","components/AboutModal.js","components/Cards.js","components/CircularLoading.js","components/ConnectText.js","components/EnvChart.js","components/ChartToggle.js","components/URLBar.js","services/envmon.js","App.js"],"names":["module","exports","colors0","colors1","StyleSheet","create","centeredView","flex","justifyContent","alignItems","marginTop","modalView","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","button","buttonOpen","buttonClose","textStyle","color","fontWeight","textAlign","modalText","marginBottom","Platform","OS","styles","container","alignSelf","flexDirection","paddingLeft","paddingRight","title","marginLeft","fontSize","fontFamily","AboutButton","onPress","Button","name","iconStyle","marginRight","size","TopBar","aboutButton","useFonts","Righteous_400Regular","View","style","Pressable","Linking","openURL","utils","Text","modalTitle","AboutModal","visible","setModalVisible","envBackend","Modal","animationType","transparent","onRequestClose","version","cards","marginVertical","card","wrapper","unjustified","text","letterSpacing","subtitle","TempCard","temperature","Number","toFixed","HumidCard","humidity","Cards","CircularLoading","ActivityIndicator","ConnectText","env","length","undefined","uptime","hours","minutes","seconds","manufactureChartData","chartData","labels","datasets","data","EnvChart","chartType","Dimensions","get","yAxisSuffix","yAxisInterval","chartConfig","backgroundGradientFrom","backgroundGradientTo","backgroundGradientToOpacity","decimalPlaces","opacity","labelColor","propsForDots","r","strokeWidth","stroke","bezier","buttonText","nonPressed","pressed","active","ChartToggle","setChartType","handleToggle","disabled","URLArea","URLInput","borderWidth","borderColor","URLField","URL","setURL","useState","setText","TextInput","onChange","e","target","value","onSubmitEditing","editable","backendURL","axios","then","response","webWrapper","bgImage","ShowCards","envdata","temp","WebEnv","setEnv","setChartData","useEffect","setTimeout","envmon","isNaN","newChart","shift","push","ImageBackground","source","StatusBar","animated","hidden","backend","App","blurRadius"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,wC,8JCErCC,EACG,UADHA,EAEG,UAFHA,EAGK,UAHLA,EAIE,UAGFC,EACG,UADHA,EAEO,UAFPA,EAGG,UAHHA,EAIE,U,GAGgBC,IAAWC,OAAO,CACxCC,aAAc,CACZC,KAAM,EACNC,eAAgB,SAChBC,WAAY,SACZC,UAAW,IAEbC,UAAW,CACTC,OAAQ,GACRC,gBAAiBX,EACjBY,aAAc,GACdC,QAAS,GACTN,WAAY,SACZO,YAAa,OACbC,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVC,cAAe,IACfC,aAAc,EACdC,UAAW,GAEbC,OAAQ,CACNT,aAAc,GACdC,QAAS,GACTO,UAAW,GAEbE,WAAY,CACVX,gBAAiBV,GAEnBsB,YAAa,CACXZ,gBAAiBV,GAEnBuB,UAAW,CACTC,MAAO,QACPC,WAAY,OACZC,UAAW,UAEbC,UAAW,CACTC,aAAc,GACdF,UAAW,a,OCnCA,EAhBD,WACZ,MAAwB,QAAhBG,IAASC,IAeJ,EARO,WACpB,MAZa,qBAmBA,EAJI,WACjB,MAfc,wC,OCIVC,EAAS9B,IAAWC,OAAO,CAC/B8B,UAAW,CACThB,OAAQ,GACRiB,UAAW,UACXC,cAAe,MACfxB,gBAAiBX,EACjBO,WAAY,SACZD,eAAgB,gBAChB8B,YAAa,GACbC,aAAc,IAEhBC,MAAO,CACLjC,KAAM,EACNoB,MAAO,QACPc,WAAY,GACZC,SAAU,GACVC,WAAY,0BAIVC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,cAAC,IAAKC,OAAN,CAAaC,KAAK,OAChBlC,gBAAiBV,EACjB6C,UAAW,CAAEP,WAAY,EAAGQ,YAAa,GACzCnC,aAAc,GACdoC,KAAM,GACNL,QAASA,KAsBEM,EAnBA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAChB,EAAoBC,YAAS,CAAEC,2BAC/B,OADA,YAII,eAACC,EAAA,EAAD,CAAMC,MAAOtB,EAAOC,UAApB,UACE,cAACsB,EAAA,EAAD,CAAWZ,QAAS,kBAAMa,IAAQC,QAAQC,MAA1C,SACE,cAAC,IAAD,CACEb,KAAK,cACLpB,MAAOxB,EACP+C,KAAM,OAGV,cAACW,EAAA,EAAD,CAAML,MAAOtB,EAAOM,MAApB,oBACA,cAAC,EAAD,CAAaK,QAASO,OAZH,M,QCjCrBlB,EAAS9B,IAAWC,OAAO,CAC/BC,aAAc,CACZC,KAAM,EACNC,eAAgB,SAChBC,WAAY,SACZC,UAAW,IAEbC,UAAW,CACTC,OAAQ,GACRC,gBAAiBX,EACjBY,aAAc,GACdC,QAAS,GACTN,WAAY,SACZO,YAAa,OACbC,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVC,cAAe,IACfC,aAAc,EACdC,UAAW,GAEbC,OAAQ,CACNT,aAAc,GACdC,QAAS,GACTO,UAAW,GAEbE,WAAY,CACVX,gBAAiBV,GAEnBsB,YAAa,CACXZ,gBAAiBV,GAEnBuB,UAAW,CACTC,MAAO,QACPC,WAAY,OACZC,UAAW,UAEbiC,WAAY,CACVpB,SAAUkB,IAAgB,GAAK,GAC/BhC,WAAY,OACZG,aAAc,GAEhBD,UAAW,CACTY,SAAU,GACVX,aAAc,GACdF,UAAW,aAiCAkC,EA7BI,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,gBAAiBC,EAAiB,EAAjBA,WAC9C,OACE,cAACX,EAAA,EAAD,CAAMC,MAAOtB,EAAO5B,aAApB,SACE,cAAC6D,EAAA,EAAD,CACEC,cAAc,QACdC,aAAa,EACbL,QAASA,EACTM,eAAgB,kBAAML,GAAiBD,IAJzC,SAME,cAACT,EAAA,EAAD,CAAMC,MAAOtB,EAAO5B,aAApB,SACE,eAACiD,EAAA,EAAD,CAAMC,MAAOtB,EAAOvB,UAApB,UACE,eAACkD,EAAA,EAAD,CAAML,MAAOtB,EAAO4B,WAApB,qBAAyCF,OACzC,eAACC,EAAA,EAAD,CAAML,MAAOtB,EAAOJ,UAApB,wBACcoC,EAAWnB,KADzB,YACwCmB,EAAWK,QADnD,YACqE,KADrE,+DAE+D,QAE/D,cAACd,EAAA,EAAD,CACED,MAAO,CAACtB,EAAOX,OAAQW,EAAOT,aAC9BoB,QAAS,kBAAMoB,GAAiBD,IAFlC,SAIE,cAACH,EAAA,EAAD,CAAML,MAAOtB,EAAOR,UAApB,4B,SCrERQ,EAAS9B,IAAWC,OAAO,CAC/BmE,MAAO,CACLjE,KAAM,EACN8B,cAAe,MACftB,QAAS,EACT0D,eAAgB,IAElBC,KAAM,CACJnE,KAAM,EACNM,gBAAiB,2BACjBC,aAAc,GACdK,OAAQ,IACRV,WAAY,SACZD,eAAgB,SAChBI,OAAQ,EACRI,YAAab,EACbc,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVC,cAAe,EACfC,aAAc,GAEhBsD,QAAS,CACPtC,cAAe,OAEjBuC,YAAa,CACXpE,eAAgB,cAElBqE,KAAM,CACJlD,MAAOzB,EACPwC,SAAUkB,IAAgB,GAAK,GAC/BhC,WAAY,OACZhB,OAAQ,EACRkE,cAAe,GAEjBC,SAAU,CACRpD,MAAOzB,EACPwC,SAAUkB,IAAgB,GAAK,GAC/BxB,UAAW,WACXxB,OAAQ,EACRF,UAAW,EACXoE,cAAe,KASbE,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACf,eAAC1B,EAAA,EAAD,CAAMC,MAAOtB,EAAOwC,KAApB,UACE,eAACnB,EAAA,EAAD,CAAMC,MAAOtB,EAAOyC,QAApB,UACE,cAAC,IAAD,CACE5B,KAAK,cACLpB,MAAOxB,EACP+C,KAAMU,IAAgB,GAAK,KAC7B,eAACC,EAAA,EAAD,CAAML,MAAOtB,EAAO2C,KAApB,UAA2BK,OAAOD,GAAlC,cAEF,eAACpB,EAAA,EAAD,CAAML,MAAOtB,EAAO6C,SAApB,WAA+C,IAAdE,EAAqB,IAAIE,QAAQ,GAAlE,eAGEC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,eAAC9B,EAAA,EAAD,CAAMC,MAAO,CAACtB,EAAOwC,KAAMxC,EAAOyC,QAASzC,EAAO0C,aAAlD,UACE,cAAC,IAAD,CACE7B,KAAK,UACLpB,MAAOxB,EACP+C,KAAMU,IAAgB,GAAK,KAC7B,eAACC,EAAA,EAAD,CAAML,MAAO,CAACtB,EAAO2C,KAAM,CAAEC,cAAe,IAA5C,UAAmDO,EAAnD,WAIWC,EA3BD,SAAC,GAAD,IAAGL,EAAH,EAAGA,YAAaI,EAAhB,EAAgBA,SAAhB,OACZ,eAAC9B,EAAA,EAAD,CAAMC,MAAOtB,EAAOsC,MAApB,UACE,cAAC,EAAD,CAAUS,YAAaA,IAAe,cAAC,EAAD,CAAWI,SAAUA,Q,QC9CzDnD,EAAS9B,IAAWC,OAAO,CAC/B8B,UAAW,CACT5B,KAAM,EACNC,eAAgB,SAChBO,QAAS,MAIEwE,EAbS,kBACtB,cAAChC,EAAA,EAAD,CAAMC,MAAOtB,EAAOC,UAApB,SACE,cAACqD,EAAA,EAAD,CAAmBtC,KAAK,QAAQvB,MAAOxB,OCDrCqD,EAAQpD,IAAWC,OAAO,CAC9B8B,UAAW,CACT5B,KAAM,EACNE,WAAY,SACZD,eAAgB,gBAChB6B,cAAe,MACfzB,OAAQ,EACRF,UAAW,GAEbmE,KAAM,CACJlD,MAAOzB,EACPwC,SAAU,GACVoC,cAAe,KAmBJW,EAfK,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACrB,OAAmB,IAAfA,EAAIC,aAAwBC,IAARF,EAEpB,cAAC7B,EAAA,EAAD,CAAML,MAAO,CAACA,EAAMrB,UAAWqB,EAAMqB,MAArC,2BAIA,eAACtB,EAAA,EAAD,CAAMC,MAAOA,EAAMrB,UAAnB,UACE,cAAC0B,EAAA,EAAD,CAAML,MAAOA,EAAMqB,KAAnB,yBACA,eAAChB,EAAA,EAAD,CAAML,MAAOA,EAAMqB,KAAnB,gBAA6Ba,EAAI,GAAGG,OAAOC,MAA3C,IAAmDJ,EAAI,GAAGG,OAAOE,QAAjE,IAA2EL,EAAI,GAAGG,OAAOG,e,iBCvB3FC,EAAuB,SAACC,GAC5B,MAAO,CACLC,OAAQD,EAAUC,OAClBC,SAAU,CACR,CACEC,KAAMH,EAAUG,SAwCTC,EAlCE,SAAC,GAAD,IAAGJ,EAAH,EAAGA,UAAWK,EAAd,EAAcA,UAAd,OACf,cAAChD,EAAA,EAAD,CAAMC,MAAO,CAAE9C,UAAW,IAAKD,WAAY,UAA3C,SACE,cAAC,IAAD,CACE4F,KAAMJ,EAAqBC,GAC3BhF,MAAO0C,IAAgB,IAAM4C,IAAWC,IAAI,UAAUvF,MAAQ,GAC9DC,OAAQ,IACRuF,YAA0B,GAAbH,EAAiB,QAAO,IACrCI,cAAe,EACfC,YAAa,CACX/F,gBAAiBX,EACjB2G,uBAAwB3G,EACxB4G,qBAAsB3G,EACtB4G,4BAA6B,GAC7BC,cAAe,EACfrF,MAAO,eAACsF,EAAD,uDAAW,EAAX,6BAAwCA,EAAxC,KACPC,WAAY,eAACD,EAAD,uDAAW,EAAX,6BAAwCA,EAAxC,KACZzD,MAAO,CACL1C,aAAc,IAEhBqG,aAAc,CACZC,EAAG,IACHC,YAAa,IACbC,OAAQpH,IAGZqH,QAAM,EACN/D,MAAO,CACL9C,UAAW,GACXqB,aAAc,EACdjB,aAAc,SC1ChBoB,EAAS9B,IAAWC,OAAO,CAC/B8B,UAAW,CACTE,cAAe,MACftB,QAAS,EACTP,eAAgB,SAChBuB,aAAc,IAEhByF,WAAY,CACV7F,MAAO,QACPe,SAAU,GACVd,WAAY,OACZC,UAAW,UAEbN,OAAQ,CACNhB,KAAM,EACNK,OAAQ,EACRG,QAAS,EACTN,WAAY,SACZD,eAAgB,SAChBM,aAAc,GAEhB2G,WAAY,CACV5G,gBAAiBV,GAEnBuH,QAAS,CACP7G,gBAAiBV,GAEnBwH,OAAQ,CACN9G,gBAAiBX,KAwBN0H,EApBK,SAAC,GAAiC,IAA/BrB,EAA8B,EAA9BA,UAAWsB,EAAmB,EAAnBA,aAC1BC,EAAe,WACnBD,EAAyB,EAAZtB,IAEf,OAAO,eAAChD,EAAA,EAAD,CAAMC,MAAOtB,EAAOC,UAApB,UACL,cAACsB,EAAA,EAAD,CAAWZ,QAASiF,EAAcC,SAAwB,IAAdxB,EAC1C/C,MAAO,gBAAGkE,EAAH,EAAGA,QAAH,MAAiB,CACtBxF,EAAOX,OAAsB,IAAdgF,EAAkBrE,EAAOwF,QAAUxF,EAAOuF,WACzDC,EAAUxF,EAAOyF,OAAS,OAH9B,SAIE,cAAC9D,EAAA,EAAD,CAAML,MAAOtB,EAAOsF,WAApB,2BAEF,cAAC/D,EAAA,EAAD,CAAWZ,QAASiF,EAAcC,SAAwB,IAAdxB,EAC1C/C,MAAO,gBAAGkE,EAAH,EAAGA,QAAH,MAAiB,CACtBxF,EAAOX,OAAsB,IAAdgF,EAAkBrE,EAAOwF,QAAUxF,EAAOuF,WACzDC,EAAUxF,EAAOyF,OAAS,OAH9B,SAIE,cAAC9D,EAAA,EAAD,CAAML,MAAOtB,EAAOsF,WAApB,4B,QC7CAtF,GAAS9B,IAAWC,OAAO,CAC/B2H,QAAS,CACPzH,KAAM,EACN8B,cAAe,MACftB,QAAS,EACTI,OAAQ,GACRsD,eAAgB,GAElBwD,SAAU,CACR1H,KAAM,EACNY,OAAQ,GACRJ,QAAS,EACTD,aAAc,EACdoH,YAAa,EACbC,YAAahI,EACbU,gBAAiB,QACjB6B,SAAU,GACVC,WAAY,aAEdpB,OAAQ,CACNhB,KAAM,EACNY,OAAQ,GACRV,WAAY,SACZD,eAAgB,SAChBM,aAAc,EACdD,gBAAiBV,GAEnBwH,OAAQ,CACN9G,gBAAiBX,KA6BNkI,GAzBE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACvB,EAAwBC,mBAASF,GAAjC,WAAOxD,EAAP,KAAa2D,EAAb,KACA,OACE,eAACjF,EAAA,EAAD,CAAMC,MAAOtB,GAAO8F,QAApB,UACE,cAACS,EAAA,EAAD,CAAWC,SAAU,SAACC,GAAD,OAAOH,EAAQG,EAAEC,OAAOC,QAC3CA,MAAOhE,EACPrB,MAAOtB,GAAO+F,SACda,gBAAiB,kBAAMR,EAAOzD,IAC9BkE,UAAU,IAEZ,cAACtF,EAAA,EAAD,CAAWZ,QAAS,kBAAMyF,EAAOzD,IAC/BrB,MAAO,gBAAGkE,EAAH,EAAGA,QAAH,MAAiB,CACtBxF,GAAOX,OACPmG,EAAUxF,GAAOyF,OAAS,OAH9B,SAKE,cAAC,IAAD,CACE5E,KAAK,QACLpB,MAAM,QACNqB,UAAW,CAAEC,YAAa,EAAGR,WAAY,GACzCS,KAAM,W,qBCnDD,GAJA,SAAC8F,GACd,OAAOC,KAAMxC,IAAIuC,GAAYE,MAAK,SAAAC,GAAQ,OAAIA,EAAS9C,S,oPCgBzD,IAAM7C,GAAQpD,IAAWC,OAAO,CAC9B8B,UAAW,CACT5B,KAAM,GAER6I,WAAY,CACV7I,KAAM,EACNY,OAAQ,IACRD,MAAO,IACPkB,UAAW,UAEbiH,QAAS,CACP9I,KAAM,KAIJ+I,GAAY,SAAC,GAAa,IAAX5D,EAAU,EAAVA,IACnB,OAAmB,IAAfA,EAAIC,aAAwBC,IAARF,EAEpB,cAAC,EAAD,IAIA,cAAC,EAAD,CAAOT,YAAaS,EAAI,GAAG6D,QAAQC,KACjCnE,SAAUK,EAAI,GAAG6D,QAAQlE,YAK3BoE,GAAS,WACb,MAAmClB,oBAAS,GAA5C,WAAOvE,EAAP,KAAgBC,EAAhB,KACA,EAAkCsE,mBAAS,GAA3C,WAAOhC,EAAP,KAAkBsB,EAAlB,KACA,EAAsBU,mBAAS,IAA/B,WAAO7C,EAAP,KAAYgE,EAAZ,KACA,EAAkCnB,mBAAS,CAAEpC,OAAQ,EAAE,GAAIE,KAAM,CAAC,KAAlE,WAAOH,EAAP,KAAkByD,EAAlB,KACA,EAAsBpB,mBAAS,+BAA/B,WAAOF,EAAP,KAAYC,EAAZ,KA8BA,OA5BAsB,qBAAU,WACRC,YAAW,WACTC,GACUzB,GACPa,MAAK,SAAA7C,GAAI,OAAIqD,EAAOrD,QACtB,OACF,CAACgC,EAAK3C,IAETkE,qBAAU,WACR,GAAmB,IAAflE,EAAIC,aAAwBC,IAARF,IACjBqE,MAAMrE,EAAI,GAAG6D,QAAQC,QAASO,MAAMrE,EAAI,GAAG6D,QAAQlE,UAAY,CACpE,IAAI2E,GAAoC,IAAzB9D,EAAUC,OAAO,GAAY,CAAEA,OAAQ,GAAIE,KAAM,I,mWAAjD,IAA6DH,GACxEA,EAAUG,KAAKV,QAAU,IAC3BqE,EAAS3D,KAAK4D,QACdD,EAAS7D,OAAO8D,SAElBD,EAAS3D,KAAK6D,KAAKhF,OAAqB,IAAdqB,EAAkBb,EAAI,GAAG6D,QAAQC,KAAO9D,EAAI,GAAG6D,QAAQlE,WACjF2E,EAAS7D,OAAO+D,KACdxE,EAAI,GAAGG,OAAOC,MAAQ,IAAMJ,EAAI,GAAGG,OAAOE,QAAU,IAAML,EAAI,GAAGG,OAAOG,SAC1E2D,EAAaK,MAEd,CAACtE,IAEJkE,qBAAU,WAERD,EADmB,CAAExD,OAAQ,GAAIE,KAAM,OAEtC,CAACE,IAGF,cAAC4D,EAAA,EAAD,CAAiBC,OAAQf,KACvB7F,MAAOA,GAAM6F,QADf,SAEE,eAAC9F,EAAA,EAAD,CAAMC,MAAOA,GAAMrB,UAAnB,UACE,cAACkI,EAAA,EAAD,CACEC,UAAU,EACVzJ,gBAAiBX,EACjBqK,QAAQ,IACV,cAAC,EAAD,CAAQnH,YAAa,kBAAMa,GAAgB,MAC3C,cAAC,GAAD,CAAWyB,IAAKA,IAChB,cAAC,EAAD,CAAUQ,UAAWA,EAAWK,UAAWA,IAC3C,cAAC,EAAD,CAAaA,UAAWA,EAAWsB,aAAcA,IACjD,cAAC,GAAD,CAAUQ,IAAKA,EAAKC,OAAQA,IAC5B,cAAC,EAAD,CAAYtE,QAASA,EAASC,gBAAiBA,EAC7CC,gBAAuB0B,IAAXF,EAAI,GAAmBA,EAAI,GAAG8E,QAAU,CAAEzH,KAAM,UAAWwB,QAAS,aAClF,cAAC,EAAD,CAAamB,IAAKA,UAsBX+E,IAhBH,WACV,OAAI7G,IAEA,cAACuG,EAAA,EAAD,CAAiBC,OAAQf,KACvB7F,MAAOA,GAAM6F,QACbqB,WAAY,GAFd,SAGE,cAACnH,EAAA,EAAD,CAAMC,MAAOA,GAAM4F,WAAnB,SACE,cAAC,GAAD,QAKE,cAAC,GAAD,M","file":"static/js/app.fe9f8eb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.91a3a11a.jpg\";","import { StyleSheet } from 'react-native';\n\nconst colors0 = {\n  blued: '#113f67',\n  bluel: '#38598b',\n  purplec: '#a2a8d3',\n  mist: '#e7eaf6'\n};\n\nconst colors1 = {\n  blued: '#5585b5',\n  verdigris: '#53a8b6',\n  blueh: '#79c2d0',\n  icej: '#bbe4e9'\n}\n\nconst componentStyles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: colors0.mist,\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: colors1.blueh,\n  },\n  buttonClose: {\n    backgroundColor: colors1.verdigris,\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"justify\"\n  }\n});\n\nexport { colors0, colors1, componentStyles };","import { Platform } from 'react-native';\n\nconst appVer = '0.9.0-alpha.ngrok';\nconst repoURL = 'https://github.com/furquan-lp/WebEnv';\n\nconst isWeb = () => {\n  return (Platform.OS === 'web');\n};\n\nconst getOS = () => {\n  return Platform.OS;\n};\n\nconst getAppVersion = () => {\n  return appVer;\n};\n\nconst getRepoURL = () => {\n  return repoURL;\n}\n\nexport default { isWeb, getOS, getAppVersion, getRepoURL };","import { View, Text, StyleSheet, Linking, Pressable } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { useFonts } from 'expo-font';\nimport { Righteous_400Regular } from '@expo-google-fonts/righteous';\nimport { colors0, colors1 } from './ComponentStyles';\nimport utils from '../services/WEUtils';\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 48,\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    backgroundColor: colors0.bluel,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  title: {\n    flex: 1,\n    color: 'white',\n    marginLeft: 15,\n    fontSize: 24,\n    fontFamily: 'Righteous_400Regular'\n  }\n});\n\nconst AboutButton = ({ onPress }) =>\n  <Icon.Button name=\"info\"\n    backgroundColor={colors1.blued}\n    iconStyle={{ marginLeft: 5, marginRight: 5 }}\n    borderRadius={20}\n    size={15}\n    onPress={onPress}\n  />;\n\nconst TopBar = ({ aboutButton }) => {\n  let [fontsLoaded] = useFonts({ Righteous_400Regular });\n  if (!fontsLoaded) return null;\n  else\n    return (\n      <View style={styles.container}>\n        <Pressable onPress={() => Linking.openURL(utils.getRepoURL())}>\n          <Icon\n            name=\"thermometer\"\n            color={colors1.icej}\n            size={26}\n          />\n        </Pressable>\n        <Text style={styles.title}>WebEnv</Text>\n        <AboutButton onPress={aboutButton} />\n      </View>\n    );\n};\n\nexport default TopBar;","import { View, Modal, Text, Pressable } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport { colors0, colors1 } from './ComponentStyles';\nimport utils from '../services/WEUtils';\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: colors0.mist,\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: colors1.blueh,\n  },\n  buttonClose: {\n    backgroundColor: colors1.verdigris,\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalTitle: {\n    fontSize: utils.isWeb() ? 20 : 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  modalText: {\n    fontSize: 14,\n    marginBottom: 15,\n    textAlign: 'justify'\n  }\n});\n\nconst AboutModal = ({ visible, setModalVisible, envBackend }) => {\n  return (\n    <View style={styles.centeredView}>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={visible}\n        onRequestClose={() => setModalVisible(!visible)}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalTitle}>WebEnv v{utils.getAppVersion()}</Text>\n            <Text style={styles.modalText}>\n              Running on {envBackend.name} version {envBackend.version} backend {'\\n'}\n              Copyright (C) 2022 Syed Furquan Ahmad. All rights reserved. {'\\n'}\n            </Text>\n            <Pressable\n              style={[styles.button, styles.buttonClose]}\n              onPress={() => setModalVisible(!visible)}\n            >\n              <Text style={styles.textStyle}>Ok</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nexport default AboutModal;","import { View, Text } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport Icon from 'react-native-vector-icons/Feather';\nimport { colors0, colors1 } from './ComponentStyles';\nimport utils from '../services/WEUtils';\n\nconst styles = StyleSheet.create({\n  cards: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 5,\n    marginVertical: 10\n  },\n  card: {\n    flex: 1,\n    backgroundColor: 'rgba(231, 234, 246, 0.5)', // colors0.mist\n    borderRadius: 10,\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 6,\n    shadowColor: colors1.blued,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 4,\n  },\n  wrapper: {\n    flexDirection: 'row'\n  },\n  unjustified: {\n    justifyContent: 'flex-start'\n  },\n  text: {\n    color: colors0.blued,\n    fontSize: utils.isWeb() ? 44 : 34,\n    fontWeight: 'bold',\n    margin: 0,\n    letterSpacing: 1\n  },\n  subtitle: {\n    color: colors0.bluel,\n    fontSize: utils.isWeb() ? 36 : 30,\n    alignSelf: 'flex-end',\n    margin: 5,\n    marginTop: 0,\n    letterSpacing: 2\n  }\n});\n\nconst Cards = ({ temperature, humidity }) =>\n  <View style={styles.cards}>\n    <TempCard temperature={temperature} /><HumidCard humidity={humidity} />\n  </View>;\n\nconst TempCard = ({ temperature }) =>\n  <View style={styles.card}>\n    <View style={styles.wrapper}>\n      <Icon\n        name=\"thermometer\"\n        color={colors1.blued}\n        size={utils.isWeb() ? 70 : 50} />\n      <Text style={styles.text}>{Number(temperature)}&#176;C</Text>\n    </View>\n    <Text style={styles.subtitle}>{((temperature * 1.8) + 32).toFixed(2)}&#176;F</Text>\n  </View>;\n\nconst HumidCard = ({ humidity }) =>\n  <View style={[styles.card, styles.wrapper, styles.unjustified]}>\n    <Icon\n      name=\"droplet\"\n      color={colors1.blued}\n      size={utils.isWeb() ? 55 : 50} />\n    <Text style={[styles.text, { letterSpacing: 4 }]}>{humidity}%</Text>\n  </View>;\n\n\nexport default Cards;","import { ActivityIndicator, StyleSheet, View } from \"react-native\";\nimport { colors1 } from \"./ComponentStyles\";\n\nconst CircularLoading = () =>\n  <View style={styles.container}>\n    <ActivityIndicator size=\"large\" color={colors1.verdigris} />\n  </View>;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 10\n  }\n});\n\nexport default CircularLoading;","import { View, Text } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport { colors0 } from './ComponentStyles';\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    margin: 5,\n    marginTop: 0,\n  },\n  text: {\n    color: colors0.mist,\n    fontSize: 20,\n    letterSpacing: 3\n  }\n});\n\nconst ConnectText = ({ env }) => {\n  if (env.length === 0 || env === undefined) {\n    return (\n      <Text style={[style.container, style.text]}>Connecting...</Text>\n    );\n  } else {\n    return (\n      <View style={style.container}>\n        <Text style={style.text}>Conntected.</Text>\n        <Text style={style.text}>Up {env[0].uptime.hours}:{env[0].uptime.minutes}:{env[0].uptime.seconds}</Text>\n      </View>\n    );\n  }\n}\n\nexport default ConnectText;","import { View, Dimensions } from \"react-native\";\nimport { LineChart } from \"react-native-chart-kit\";\n\nimport { colors0, colors1 } from \"./ComponentStyles\";\nimport utils from '../services/WEUtils';\n\nconst manufactureChartData = (chartData) => {\n  return {\n    labels: chartData.labels,\n    datasets: [\n      {\n        data: chartData.data\n      }\n    ]\n  };\n};\n\nconst EnvChart = ({ chartData, chartType }) =>\n  <View style={{ marginTop: 100, alignItems: 'center' }}>\n    <LineChart\n      data={manufactureChartData(chartData)}\n      width={utils.isWeb() ? 470 : Dimensions.get(\"window\").width - 10} // from react-native\n      height={220}\n      yAxisSuffix={chartType == 0 ? '°C' : '%'}\n      yAxisInterval={2}\n      chartConfig={{\n        backgroundColor: colors0.bluel,\n        backgroundGradientFrom: colors0.bluel,\n        backgroundGradientTo: colors1.blued,\n        backgroundGradientToOpacity: 0.5,\n        decimalPlaces: 1, // optional, defaults to 2dp\n        color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        style: {\n          borderRadius: 16\n        },\n        propsForDots: {\n          r: \"6\",\n          strokeWidth: \"2\",\n          stroke: colors0.bluel\n        }\n      }}\n      bezier\n      style={{\n        marginTop: 40,\n        marginBottom: 0,\n        borderRadius: 16,\n      }}\n    />\n  </View>;\n\nexport default EnvChart;","import { View, Pressable, Text } from \"react-native\";\nimport { StyleSheet } from \"react-native\";\nimport { colors0, colors1 } from './ComponentStyles';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    padding: 5,\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  button: {\n    flex: 1,\n    margin: 2,\n    padding: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5,\n  },\n  nonPressed: {\n    backgroundColor: colors1.verdigris\n  },\n  pressed: {\n    backgroundColor: colors1.icej\n  },\n  active: {\n    backgroundColor: colors0.purplec\n  }\n});\n\nconst ChartToggle = ({ chartType, setChartType }) => {\n  const handleToggle = () => {\n    setChartType(chartType ^ 1);\n  }\n  return <View style={styles.container}>\n    <Pressable onPress={handleToggle} disabled={chartType === 0}\n      style={({ pressed }) => [\n        styles.button, chartType === 0 ? styles.pressed : styles.nonPressed,\n        pressed ? styles.active : null]}>\n      <Text style={styles.buttonText}>Temperature</Text>\n    </Pressable>\n    <Pressable onPress={handleToggle} disabled={chartType !== 0}\n      style={({ pressed }) => [\n        styles.button, chartType !== 0 ? styles.pressed : styles.nonPressed,\n        pressed ? styles.active : null]} >\n      <Text style={styles.buttonText}>Humidity</Text>\n    </Pressable>\n  </View >;\n};\n\nexport default ChartToggle;","import { useState } from 'react';\nimport { View, TextInput, Pressable } from \"react-native\";\nimport { StyleSheet } from \"react-native\";\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { colors0, colors1 } from \"./ComponentStyles\";\n\nconst styles = StyleSheet.create({\n  URLArea: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 6,\n    height: 40,\n    marginVertical: 5\n  },\n  URLInput: {\n    flex: 4,\n    height: 40,\n    padding: 5,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: colors1.icej,\n    backgroundColor: 'white',\n    fontSize: 20,\n    fontFamily: 'monospace'\n  },\n  button: {\n    flex: 1,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    backgroundColor: colors1.verdigris\n  },\n  active: {\n    backgroundColor: colors0.purplec\n  }\n});\n\nconst URLField = ({ URL, setURL }) => {\n  const [text, setText] = useState(URL);\n  return (\n    <View style={styles.URLArea}>\n      <TextInput onChange={(e) => setText(e.target.value)}\n        value={text}\n        style={styles.URLInput}\n        onSubmitEditing={() => setURL(text)}\n        editable={false}\n      />\n      <Pressable onPress={() => setURL(text)}\n        style={({ pressed }) => [\n          styles.button,\n          pressed ? styles.active : null]}\n      >\n        <Icon\n          name=\"check\"\n          color=\"white\"\n          iconStyle={{ marginRight: 5, marginLeft: 5 }}\n          size={26}\n        />\n      </Pressable>\n    </View>);\n};\n\nexport default URLField;","import axios from 'axios';\n\nconst getAll = (backendURL) => {\n  return axios.get(backendURL).then(response => response.data);\n}\n\nexport default { getAll };","import { useState, useEffect } from 'react';\nimport { View, StatusBar, ImageBackground } from 'react-native';\nimport { StyleSheet } from 'react-native';\n\nimport TopBar from './components/TopBar';\nimport AboutModal from './components/AboutModal';\nimport Cards from './components/Cards';\nimport CircularLoading from './components/CircularLoading';\nimport ConnectText from './components/ConnectText';\nimport EnvChart from './components/EnvChart';\nimport ChartToggle from './components/ChartToggle';\nimport URLField from './components/URLBar';\nimport { colors0, colors1 } from './components/ComponentStyles';\n\nimport utils from './services/WEUtils';\nimport envmon from './services/envmon';\n\nimport bgImage from './assets/background.jpg';\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  webWrapper: {\n    flex: 1,\n    height: 720,\n    width: 480,\n    alignSelf: 'center'\n  },\n  bgImage: {\n    flex: 1\n  }\n});\n\nconst ShowCards = ({ env }) => {\n  if (env.length === 0 || env === undefined) {\n    return (\n      <CircularLoading />\n    );\n  } else {\n    return (\n      <Cards temperature={env[0].envdata.temp}\n        humidity={env[0].envdata.humidity} />\n    );\n  }\n}\n\nconst WebEnv = () => {\n  const [visible, setModalVisible] = useState(false);\n  const [chartType, setChartType] = useState(0);\n  const [env, setEnv] = useState([]);\n  const [chartData, setChartData] = useState({ labels: [-1], data: [0.0] });\n  const [URL, setURL] = useState('http://4.tcp.ngrok.io:17126');\n\n  useEffect(() => {\n    setTimeout(() => {\n      envmon\n        .getAll(URL)\n        .then(data => setEnv(data));\n    }, 2000);\n  }, [URL, env]);\n\n  useEffect(() => {\n    if (env.length !== 0 && env !== undefined\n      && !(isNaN(env[0].envdata.temp) || isNaN(env[0].envdata.humidity))) {\n      let newChart = chartData.labels[0] === -1 ? { labels: [], data: [] } : { ...chartData };\n      if (chartData.data.length >= 5) {\n        newChart.data.shift();\n        newChart.labels.shift();\n      }\n      newChart.data.push(Number(chartType === 0 ? env[0].envdata.temp : env[0].envdata.humidity));\n      newChart.labels.push(\n        env[0].uptime.hours + ':' + env[0].uptime.minutes + ':' + env[0].uptime.seconds);\n      setChartData(newChart);\n    }\n  }, [env]);\n\n  useEffect(() => {\n    const blankChart = { labels: [], data: [] };\n    setChartData(blankChart);\n  }, [chartType]);\n\n  return (\n    <ImageBackground source={bgImage}\n      style={style.bgImage}>\n      <View style={style.container}>\n        <StatusBar\n          animated={true}\n          backgroundColor={colors0.blued}\n          hidden={false} />\n        <TopBar aboutButton={() => setModalVisible(true)} />\n        <ShowCards env={env} />\n        <EnvChart chartData={chartData} chartType={chartType} />\n        <ChartToggle chartType={chartType} setChartType={setChartType} />\n        <URLField URL={URL} setURL={setURL} />\n        <AboutModal visible={visible} setModalVisible={setModalVisible}\n          envBackend={env[0] !== undefined ? env[0].backend : { name: 'unknown', version: 'unknown' }} />\n        <ConnectText env={env} />\n      </View>\n    </ImageBackground>\n  );\n};\n\nconst App = () => {\n  if (utils.isWeb()) {\n    return (\n      <ImageBackground source={bgImage}\n        style={style.bgImage}\n        blurRadius={10}>\n        <View style={style.webWrapper}>\n          <WebEnv />\n        </View>\n      </ImageBackground >\n    );\n  } else {\n    return (<WebEnv />);\n  }\n};\n\nexport default App;"],"sourceRoot":""}