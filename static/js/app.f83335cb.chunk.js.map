{"version":3,"sources":["assets/background.jpg","components/ComponentStyles.js","services/envmon.js","services/WEUtils.js","components/TopBar.js","components/AboutModal.js","components/Cards.js","components/CircularLoading.js","components/ConnectText.js","components/EnvChart.js","components/ChartToggle.js","components/URLBar.js","App.js"],"names":["module","exports","colors0","colors1","componentStyles","StyleSheet","create","appContainer","flex","webWrapper","height","width","alignSelf","bgImage","centeredView","justifyContent","alignItems","marginTop","modalView","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","button","buttonOpen","buttonClose","textStyle","color","fontWeight","textAlign","modalText","marginBottom","backendURL","requestHeader","undefined","axios","get","then","response","data","headers","appVer","repoURL","setURL","envmon","webenvData","record","version","repositoryURL","Platform","OS","Dimensions","styles","container","flexDirection","paddingLeft","paddingRight","title","marginLeft","fontSize","fontFamily","AboutButton","onPress","Button","name","iconStyle","marginRight","size","TopBar","aboutButton","useFonts","Righteous_400Regular","View","style","Pressable","Linking","openURL","utils","Text","modalTitle","AboutModal","visible","setModalVisible","envBackend","Modal","animationType","transparent","onRequestClose","cards","marginVertical","card","wrapper","unjustified","text","letterSpacing","subtitle","TempCard","temperature","Number","toFixed","HumidCard","humidity","Cards","CircularLoading","ActivityIndicator","ConnectText","env","length","uptime","hours","minutes","seconds","manufactureChartData","chartData","labels","datasets","EnvChart","chartType","yAxisSuffix","yAxisInterval","chartConfig","backgroundGradientFrom","backgroundGradientTo","backgroundGradientToOpacity","decimalPlaces","opacity","labelColor","propsForDots","r","strokeWidth","stroke","bezier","buttonText","nonPressed","pressed","active","ChartToggle","setChartType","handleToggle","disabled","URLArea","URLInput","borderWidth","borderColor","URLField","URL","useState","setText","TextInput","onChange","e","target","value","onSubmitEditing","editable","ShowCards","envdata","temp","WebEnv","setEnv","setChartData","useEffect","setTimeout","isNaN","newChart","shift","push","ImageBackground","source","StatusBar","animated","hidden","backend","App","blurRadius"],"mappings":"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","file":"static/js/app.f83335cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.6ca76324.jpg\";","import { StyleSheet } from 'react-native';\n\nconst colors0 = {\n  blued: '#113f67',\n  bluel: '#38598b',\n  purplec: '#a2a8d3',\n  mist: '#e7eaf6'\n};\n\nconst colors1 = {\n  blued: '#5585b5',\n  verdigris: '#53a8b6',\n  blueh: '#79c2d0',\n  icej: '#bbe4e9'\n}\n\nconst componentStyles = StyleSheet.create({\n  appContainer: {\n    flex: 1\n  },\n  webWrapper: {\n    flex: 1,\n    height: 720,\n    width: 480,\n    alignSelf: 'center'\n  },\n  bgImage: {\n    flex: 1\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: colors0.mist,\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: colors1.blueh,\n  },\n  buttonClose: {\n    backgroundColor: colors1.verdigris,\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'justify'\n  }\n});\n\nexport { colors0, colors1, componentStyles };","import axios from 'axios';\n\nconst getAll = (backendURL, requestHeader) => {\n  if (requestHeader === undefined)\n    return axios.get(backendURL).then(response => response.data);\n  else\n    return axios.get(backendURL, { headers: requestHeader }).then(response => response.data);\n}\n\nexport default { getAll };","import { Platform, Dimensions } from 'react-native';\nimport envmon from './envmon';\n\nlet appVer = '0.9.4-beta.ngrok';\nlet repoURL = 'https://github.com/furquan-lp/WebEnv';\n\nconst init = (setURL) => {\n  envmon.getAll(\n    'https://api.jsonbin.io/v3/b/6257c74280883c3054e15f27/latest',\n    { 'X-Master-Key': '$2b$10$pWNGBg9x/gcFna2bGzV2DO.97lv6XCoK35tPfs4e.HlgJAdpZ8aC.' }\n  ).then(webenvData => {\n    appVer = webenvData.record.version;\n    repoURL = webenvData.record.repositoryURL;\n    setURL(webenvData.record.backendURL);\n  });\n}\n\nconst isWeb = () => {\n  return (Platform.OS === 'web');\n};\n\nconst isPortrait = () => {\n  return Dimensions.get('window').height > Dimensions.get('window').width;\n};\n\nconst getOS = () => {\n  return Platform.OS;\n};\n\nconst getAppVersion = () => {\n  return appVer;\n};\n\nconst getRepoURL = () => {\n  return repoURL;\n}\n\nexport default { init, isWeb, isPortrait, getOS, getAppVersion, getRepoURL };","import { View, Text, StyleSheet, Linking, Pressable } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { useFonts } from 'expo-font';\nimport { Righteous_400Regular } from '@expo-google-fonts/righteous';\nimport { colors0, colors1 } from './ComponentStyles';\nimport utils from '../services/WEUtils';\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 48,\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    backgroundColor: colors0.bluel,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  title: {\n    flex: 1,\n    color: 'white',\n    marginLeft: 15,\n    fontSize: 24,\n    fontFamily: 'Righteous_400Regular'\n  }\n});\n\nconst AboutButton = ({ onPress }) =>\n  <Icon.Button name=\"info\"\n    backgroundColor={colors1.blued}\n    iconStyle={{ marginLeft: 5, marginRight: 5 }}\n    borderRadius={20}\n    size={15}\n    onPress={onPress}\n  />;\n\nconst TopBar = ({ aboutButton }) => {\n  let [fontsLoaded] = useFonts({ Righteous_400Regular });\n  if (!fontsLoaded) return null;\n  else\n    return (\n      <View style={styles.container}>\n        <Pressable onPress={() => Linking.openURL(utils.getRepoURL())}>\n          <Icon\n            name=\"thermometer\"\n            color={colors1.icej}\n            size={26}\n          />\n        </Pressable>\n        <Text style={styles.title}>WebEnv</Text>\n        <AboutButton onPress={aboutButton} />\n      </View>\n    );\n};\n\nexport default TopBar;","import { View, Modal, Text, Pressable } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport { colors0, colors1 } from './ComponentStyles';\nimport utils from '../services/WEUtils';\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: colors0.mist,\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: colors1.blueh,\n  },\n  buttonClose: {\n    backgroundColor: colors1.verdigris,\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalTitle: {\n    fontSize: utils.isWeb() ? 20 : 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  modalText: {\n    fontSize: 14,\n    marginBottom: 15,\n    textAlign: 'justify'\n  }\n});\n\nconst AboutModal = ({ visible, setModalVisible, envBackend }) => {\n  return (\n    <View style={styles.centeredView}>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={visible}\n        onRequestClose={() => setModalVisible(!visible)}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalTitle}>WebEnv v{utils.getAppVersion()}</Text>\n            <Text style={styles.modalText}>\n              Running on {envBackend.name} version {envBackend.version} backend {'\\n'}\n              Copyright (C) 2022 Syed Furquan Ahmad. All rights reserved. {'\\n'}\n            </Text>\n            <Pressable\n              style={[styles.button, styles.buttonClose]}\n              onPress={() => setModalVisible(!visible)}\n            >\n              <Text style={styles.textStyle}>Ok</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nexport default AboutModal;","import { View, Text } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport Icon from 'react-native-vector-icons/Feather';\nimport { colors0, colors1 } from './ComponentStyles';\nimport utils from '../services/WEUtils';\n\nconst styles = StyleSheet.create({\n  cards: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 5,\n    marginVertical: 10\n  },\n  card: {\n    flex: 1,\n    backgroundColor: 'rgba(231, 234, 246, 0.5)', // colors0.mist\n    borderRadius: 10,\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 6,\n    shadowColor: colors1.blued,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 4,\n  },\n  wrapper: {\n    flexDirection: 'row'\n  },\n  unjustified: {\n    justifyContent: 'flex-start'\n  },\n  text: {\n    color: colors0.blued,\n    fontSize: utils.isWeb() ? 44 : 34,\n    fontWeight: 'bold',\n    margin: 0,\n    letterSpacing: 1\n  },\n  subtitle: {\n    color: colors0.bluel,\n    fontSize: utils.isWeb() ? 36 : 30,\n    alignSelf: 'flex-end',\n    margin: 5,\n    marginTop: 0,\n    letterSpacing: 2\n  }\n});\n\nconst Cards = ({ temperature, humidity }) =>\n  <View style={styles.cards}>\n    <TempCard temperature={temperature} /><HumidCard humidity={humidity} />\n  </View>;\n\nconst TempCard = ({ temperature }) =>\n  <View style={styles.card}>\n    <View style={styles.wrapper}>\n      <Icon\n        name=\"thermometer\"\n        color={colors1.blued}\n        size={utils.isWeb() ? 70 : 50} />\n      <Text style={styles.text}>{Number(temperature)}&#176;C</Text>\n    </View>\n    <Text style={styles.subtitle}>{((temperature * 1.8) + 32).toFixed(2)}&#176;F</Text>\n  </View>;\n\nconst HumidCard = ({ humidity }) =>\n  <View style={[styles.card, styles.wrapper, styles.unjustified]}>\n    <Icon\n      name=\"droplet\"\n      color={colors1.blued}\n      size={utils.isWeb() ? 55 : 50} />\n    <Text style={[styles.text, { letterSpacing: 4 }]}>{humidity}%</Text>\n  </View>;\n\n\nexport default Cards;","import { ActivityIndicator, StyleSheet, View } from 'react-native';\nimport { colors1 } from './ComponentStyles';\n\nconst CircularLoading = () =>\n  <View style={styles.container}>\n    <ActivityIndicator size=\"large\" color={colors1.verdigris} />\n  </View>;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 10\n  }\n});\n\nexport default CircularLoading;","import { View, Text } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport { colors0 } from './ComponentStyles';\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    margin: 5,\n    marginTop: 0,\n  },\n  text: {\n    color: colors0.mist,\n    fontSize: 20,\n    letterSpacing: 3\n  }\n});\n\nconst ConnectText = ({ env }) => {\n  if (env.length === 0 || env === undefined) {\n    return (\n      <Text style={[style.container, style.text]}>Connecting...</Text>\n    );\n  } else {\n    return (\n      <View style={style.container}>\n        <Text style={style.text}>Conntected.</Text>\n        <Text style={style.text}>Up {env[0].uptime.hours}:{env[0].uptime.minutes}:{env[0].uptime.seconds}</Text>\n      </View>\n    );\n  }\n}\n\nexport default ConnectText;","import { View, Dimensions } from 'react-native';\nimport { LineChart } from 'react-native-chart-kit';\n\nimport { colors0, colors1 } from './ComponentStyles';\nimport utils from '../services/WEUtils';\n\nconst manufactureChartData = (chartData) => {\n  return {\n    labels: chartData.labels,\n    datasets: [\n      {\n        data: chartData.data\n      }\n    ]\n  };\n};\n\nconst EnvChart = ({ chartData, chartType }) =>\n  <View style={{ marginTop: 100, alignItems: 'center' }}>\n    <LineChart\n      data={manufactureChartData(chartData)}\n      width={utils.isWeb() && !utils.isPortrait() ?\n        470 : Dimensions.get(\"window\").width - 20} // from react-native\n      height={220}\n      yAxisSuffix={chartType == 0 ? '°C' : '%'}\n      yAxisInterval={2}\n      chartConfig={{\n        backgroundColor: colors0.bluel,\n        backgroundGradientFrom: colors0.bluel,\n        backgroundGradientTo: colors1.blued,\n        backgroundGradientToOpacity: 0.5,\n        decimalPlaces: 1, // optional, defaults to 2dp\n        color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        style: {\n          borderRadius: 16\n        },\n        propsForDots: {\n          r: \"6\",\n          strokeWidth: \"2\",\n          stroke: colors0.bluel\n        }\n      }}\n      bezier\n      style={{\n        marginTop: 40,\n        marginBottom: 0,\n        borderRadius: 16,\n      }}\n    />\n  </View>;\n\nexport default EnvChart;","import { View, Pressable, Text } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport { colors0, colors1 } from './ComponentStyles';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    padding: 5,\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  button: {\n    flex: 1,\n    margin: 2,\n    padding: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5,\n  },\n  nonPressed: {\n    backgroundColor: colors1.verdigris\n  },\n  pressed: {\n    backgroundColor: colors1.icej\n  },\n  active: {\n    backgroundColor: colors0.purplec\n  }\n});\n\nconst ChartToggle = ({ chartType, setChartType }) => {\n  const handleToggle = () => {\n    setChartType(chartType ^ 1);\n  }\n  return <View style={styles.container}>\n    <Pressable onPress={handleToggle} disabled={chartType === 0}\n      style={({ pressed }) => [\n        styles.button, chartType === 0 ? styles.pressed : styles.nonPressed,\n        pressed ? styles.active : null]}>\n      <Text style={styles.buttonText}>Temperature</Text>\n    </Pressable>\n    <Pressable onPress={handleToggle} disabled={chartType !== 0}\n      style={({ pressed }) => [\n        styles.button, chartType !== 0 ? styles.pressed : styles.nonPressed,\n        pressed ? styles.active : null]} >\n      <Text style={styles.buttonText}>Humidity</Text>\n    </Pressable>\n  </View >;\n};\n\nexport default ChartToggle;","import { useState } from 'react';\nimport { View, TextInput, Pressable } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { colors0, colors1 } from './ComponentStyles';\n\nconst styles = StyleSheet.create({\n  URLArea: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 6,\n    height: 40,\n    marginVertical: 5\n  },\n  URLInput: {\n    flex: 4,\n    height: 40,\n    padding: 5,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: colors1.icej,\n    backgroundColor: 'white',\n    fontSize: 20,\n    fontFamily: 'monospace'\n  },\n  button: {\n    flex: 1,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    backgroundColor: colors1.verdigris\n  },\n  active: {\n    backgroundColor: colors0.purplec\n  }\n});\n\nconst URLField = ({ URL, setURL }) => {\n  const [text, setText] = useState(URL);\n  if (text !== URL)\n    setText(URL);\n  return (\n    <View style={styles.URLArea}>\n      <TextInput onChange={(e) => setText(e.target.value)}\n        value={text}\n        style={styles.URLInput}\n        onSubmitEditing={() => setURL(text)}\n        editable={false}\n      />\n      <Pressable onPress={() => setURL(text)}\n        style={({ pressed }) => [\n          styles.button,\n          pressed ? styles.active : null]}\n      >\n        <Icon\n          name=\"check\"\n          color=\"white\"\n          iconStyle={{ marginRight: 5, marginLeft: 5 }}\n          size={26}\n        />\n      </Pressable>\n    </View>);\n};\n\nexport default URLField;","import { useState, useEffect } from 'react';\nimport { View, StatusBar, ImageBackground } from 'react-native';\n\nimport TopBar from './components/TopBar';\nimport AboutModal from './components/AboutModal';\nimport Cards from './components/Cards';\nimport CircularLoading from './components/CircularLoading';\nimport ConnectText from './components/ConnectText';\nimport EnvChart from './components/EnvChart';\nimport ChartToggle from './components/ChartToggle';\nimport URLField from './components/URLBar';\nimport { colors0, componentStyles } from './components/ComponentStyles';\n\nimport utils from './services/WEUtils';\nimport envmon from './services/envmon';\n\nimport bgImage from './assets/background.jpg';\n\nconst ShowCards = ({ env }) => {\n  if (env.length === 0 || env === undefined) {\n    return (\n      <CircularLoading />\n    );\n  } else {\n    return (\n      <Cards temperature={env[0].envdata.temp}\n        humidity={env[0].envdata.humidity} />\n    );\n  }\n}\n\nconst WebEnv = () => {\n  const [visible, setModalVisible] = useState(false);\n  const [chartType, setChartType] = useState(0);\n  const [env, setEnv] = useState([]);\n  const [chartData, setChartData] = useState({ labels: [-1], data: [0.0] });\n  const [URL, setURL] = useState('http://envmon.local:8888/');\n\n  useEffect(() => { utils.init(setURL) }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      envmon\n        .getAll(URL)\n        .then(data => setEnv(data));\n    }, 2000);\n  }, [env]);\n\n  useEffect(() => {\n    setEnv([]);\n  }, [URL]);\n\n  useEffect(() => {\n    if (env.length !== 0 && env !== undefined\n      && !(isNaN(env[0].envdata.temp) || isNaN(env[0].envdata.humidity))) {\n      let newChart = chartData.labels[0] === -1 ? { labels: [], data: [] } : { ...chartData };\n      if (chartData.data.length >= 5) {\n        newChart.data.shift();\n        newChart.labels.shift();\n      }\n      newChart.data.push(Number(chartType === 0 ? env[0].envdata.temp : env[0].envdata.humidity));\n      newChart.labels.push(\n        env[0].uptime.hours + ':' + env[0].uptime.minutes + ':' + env[0].uptime.seconds);\n      setChartData(newChart);\n    }\n  }, [env]);\n\n  useEffect(() => {\n    const blankChart = { labels: [], data: [] };\n    setChartData(blankChart);\n  }, [chartType]);\n\n  return (\n    <ImageBackground source={bgImage}\n      style={componentStyles.bgImage}>\n      <View style={componentStyles.appContainer}>\n        <StatusBar\n          animated={true}\n          backgroundColor={colors0.blued}\n          hidden={false} />\n        <TopBar aboutButton={() => setModalVisible(true)} />\n        <ShowCards env={env} />\n        <EnvChart chartData={chartData} chartType={chartType} />\n        <ChartToggle chartType={chartType} setChartType={setChartType} />\n        <URLField URL={URL} setURL={setURL} />\n        <AboutModal visible={visible} setModalVisible={setModalVisible}\n          envBackend={env[0] !== undefined ? env[0].backend : { name: 'unknown', version: 'unknown' }} />\n        <ConnectText env={env} />\n      </View>\n    </ImageBackground>\n  );\n};\n\nconst App = () => {\n  if (utils.isWeb() && !utils.isPortrait()) {\n    return (\n      <ImageBackground source={bgImage}\n        style={componentStyles.bgImage}\n        blurRadius={10}>\n        <View style={componentStyles.webWrapper}>\n          <WebEnv />\n        </View>\n      </ImageBackground >\n    );\n  } else {\n    return (<WebEnv />);\n  }\n};\n\nexport default App;"],"sourceRoot":""}