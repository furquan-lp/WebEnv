{"ast":null,"code":"var __extends=this&&this.__extends||function(){var _extendStatics=function extendStatics(d,b){_extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics(d,b);};return function(d,b){_extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return __assign.apply(this,arguments);};import Pie from\"paths-js/pie\";import React from\"react\";import View from\"react-native-web/dist/exports/View\";import{G,Path,Rect,Svg,Text}from\"react-native-svg\";import AbstractChart from\"./AbstractChart\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PieChart=function(_super){__extends(PieChart,_super);function PieChart(){return _super!==null&&_super.apply(this,arguments)||this;}PieChart.prototype.render=function(){var _this=this;var _a=this.props,_b=_a.style,style=_b===void 0?{}:_b,backgroundColor=_a.backgroundColor,_c=_a.absolute,absolute=_c===void 0?false:_c,_d=_a.hasLegend,hasLegend=_d===void 0?true:_d,_e=_a.avoidFalseZero,avoidFalseZero=_e===void 0?false:_e;var _f=style.borderRadius,borderRadius=_f===void 0?0:_f;var chart=Pie({center:this.props.center||[0,0],r:0,R:this.props.height/2.5,data:this.props.data,accessor:function accessor(x){return x[_this.props.accessor];}});var total=this.props.data.reduce(function(sum,item){return sum+item[_this.props.accessor];},0);var slices=chart.curves.map(function(c,i){var value;if(absolute){value=c.item[_this.props.accessor];}else{if(total===0){value=0+\"%\";}else{var percentage=Math.round(100/total*c.item[_this.props.accessor]);value=Math.round(100/total*c.item[_this.props.accessor])+\"%\";if(avoidFalseZero&&percentage===0){value=\"<1%\";}else{value=percentage+\"%\";}}}return _jsxs(G,{children:[_jsx(Path,{d:c.sector.path.print(),fill:c.item.color}),hasLegend?_jsx(Rect,{width:\"16px\",height:\"16px\",fill:c.item.color,rx:8,ry:8,x:_this.props.width/2.5-24,y:-(_this.props.height/2.5)+_this.props.height*0.8/_this.props.data.length*i+12}):null,hasLegend?_jsx(Text,{fill:c.item.legendFontColor,fontSize:c.item.legendFontSize,fontFamily:c.item.legendFontFamily,x:_this.props.width/2.5,y:-(_this.props.height/2.5)+_this.props.height*0.8/_this.props.data.length*i+12*2,children:value+\" \"+c.item.name}):null]},Math.random());});return _jsx(View,{style:__assign({width:this.props.width,height:this.props.height,padding:0},style),children:_jsxs(Svg,{width:this.props.width,height:this.props.height,children:[_jsx(G,{children:this.renderDefs(__assign({width:this.props.height,height:this.props.height},this.props.chartConfig))}),_jsx(Rect,{width:\"100%\",height:this.props.height,rx:borderRadius,ry:borderRadius,fill:backgroundColor}),_jsx(G,{x:this.props.width/2/2+Number(this.props.paddingLeft?this.props.paddingLeft:0),y:this.props.height/2,children:slices})]})});};return PieChart;}(AbstractChart);export default PieChart;","map":{"version":3,"sources":["../src/PieChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import Pie from \"paths-js/pie\";\nimport React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { G, Path, Rect, Svg, Text } from \"react-native-svg\";\n\nimport AbstractChart, { AbstractChartProps } from \"./AbstractChart\";\n\nexport interface PieChartProps extends AbstractChartProps {\n  data: Array<any>;\n  width: number;\n  height: number;\n  accessor: string;\n  backgroundColor: string;\n  paddingLeft: string;\n  center?: Array<number>;\n  absolute?: boolean;\n  hasLegend?: boolean;\n  style?: Partial<ViewStyle>;\n  avoidFalseZero?: boolean;\n}\n\ntype PieChartState = {};\n\nclass PieChart extends AbstractChart<PieChartProps, PieChartState> {\n  render() {\n    const {\n      style = {},\n      backgroundColor,\n      absolute = false,\n      hasLegend = true,\n      avoidFalseZero = false\n    } = this.props;\n\n    const { borderRadius = 0 } = style;\n\n    const chart = Pie({\n      center: this.props.center || [0, 0],\n      r: 0,\n      R: this.props.height / 2.5,\n      data: this.props.data,\n      accessor: x => {\n        return x[this.props.accessor];\n      }\n    });\n\n    const total = this.props.data.reduce((sum, item) => {\n      return sum + item[this.props.accessor];\n    }, 0);\n\n    const slices = chart.curves.map((c, i) => {\n      let value: string;\n\n      if (absolute) {\n        value = c.item[this.props.accessor];\n      } else {\n        if (total === 0) {\n          value = 0 + \"%\";\n        } else {\n          const percentage = Math.round(\n            (100 / total) * c.item[this.props.accessor]\n          );\n          value = Math.round((100 / total) * c.item[this.props.accessor]) + \"%\";\n          if (avoidFalseZero && percentage === 0) {\n            value = \"<1%\";\n          } else {\n            value = percentage + \"%\";\n          }\n        }\n      }\n\n      return (\n        <G key={Math.random()}>\n          <Path d={c.sector.path.print()} fill={c.item.color} />\n          {hasLegend ? (\n            <Rect\n              width=\"16px\"\n              height=\"16px\"\n              fill={c.item.color}\n              rx={8}\n              ry={8}\n              x={this.props.width / 2.5 - 24}\n              y={\n                -(this.props.height / 2.5) +\n                ((this.props.height * 0.8) / this.props.data.length) * i +\n                12\n              }\n            />\n          ) : null}\n          {hasLegend ? (\n            <Text\n              fill={c.item.legendFontColor}\n              fontSize={c.item.legendFontSize}\n              fontFamily={c.item.legendFontFamily}\n              x={this.props.width / 2.5}\n              y={\n                -(this.props.height / 2.5) +\n                ((this.props.height * 0.8) / this.props.data.length) * i +\n                12 * 2\n              }\n            >\n              {`${value} ${c.item.name}`}\n            </Text>\n          ) : null}\n        </G>\n      );\n    });\n\n    return (\n      <View\n        style={{\n          width: this.props.width,\n          height: this.props.height,\n          padding: 0,\n          ...style\n        }}\n      >\n        <Svg width={this.props.width} height={this.props.height}>\n          <G>\n            {this.renderDefs({\n              width: this.props.height,\n              height: this.props.height,\n              ...this.props.chartConfig\n            })}\n          </G>\n          <Rect\n            width=\"100%\"\n            height={this.props.height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill={backgroundColor}\n          />\n          <G\n            x={\n              this.props.width / 2 / 2 +\n              Number(this.props.paddingLeft ? this.props.paddingLeft : 0)\n            }\n            y={this.props.height / 2}\n          >\n            {slices}\n          </G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default PieChart;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}