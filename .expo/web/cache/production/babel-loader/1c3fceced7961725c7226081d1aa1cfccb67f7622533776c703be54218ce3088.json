{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React from\"react\";import{Rect,Text}from\"react-native-svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CIRCLE_WIDTH=16;var PADDING_LEFT=4;var CHARACTER_WIDTH=6;export var LegendItem=function LegendItem(props){var baseLegendItemX=props.baseLegendItemX,index=props.index;var centerAlignedCircle=props.legendOffset/2-CIRCLE_WIDTH/2;var centerAlignedText=props.legendOffset*0.65;var textLengthOffset=props.legendText.length*CHARACTER_WIDTH/2;var legendItemNumber=index+1;return _jsxs(_Fragment,{children:[_jsx(Rect,{width:CIRCLE_WIDTH,height:CIRCLE_WIDTH,fill:props.iconColor,rx:8,ry:8,x:baseLegendItemX*legendItemNumber-(CIRCLE_WIDTH+textLengthOffset),y:centerAlignedCircle}),_jsx(Text,_objectSpread(_objectSpread({x:baseLegendItemX*legendItemNumber+(PADDING_LEFT-textLengthOffset),y:centerAlignedText},props.labelProps),{},{children:props.legendText}))]});};","map":{"version":3,"mappings":"w0BAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAAgBC,IAAI,CAAEC,IAAI,KAAmB,kBAAkB,CAAC,6IAEhE,GAAMC,aAAY,CAAG,EAAE,CACvB,GAAMC,aAAY,CAAG,CAAC,CACtB,GAAMC,gBAAe,CAAG,CAAC,CAWzB,MAAO,IAAMC,WAAU,CAAG,QAAbA,WAAU,CAAIC,KAAsB,EACvC,mBAAe,CAAYA,KAAK,gBAAjB,CAAEC,KAAK,CAAKD,KAAK,MAAV,CAG9B,GAAME,oBAAmB,CAAGF,KAAK,CAACG,YAAY,CAAG,CAAC,CAAGP,YAAY,CAAG,CAAC,CAErE,GAAMQ,kBAAiB,CAAGJ,KAAK,CAACG,YAAY,CAAG,IAAI,CAEnD,GAAME,iBAAgB,CAAIL,KAAK,CAACM,UAAU,CAACC,MAAM,CAAGT,eAAe,CAAI,CAAC,CACxE,GAAMU,iBAAgB,CAAGP,KAAK,CAAG,CAAC,CAElC,MACE,4BACE,KAAC,IAAI,EACH,KAAK,CAAEL,YAAa,CACpB,MAAM,CAAEA,YAAa,CACrB,IAAI,CAAEI,KAAK,CAACS,SAAU,CACtB,EAAE,CAAE,CAAE,CACN,EAAE,CAAE,CAAE,CACN,CAAC,CACCC,eAAe,CAAGF,gBAAgB,EAAIZ,YAAY,CAAGS,gBAAgB,CACtE,CACD,CAAC,CAAEH,mBAAoB,EAEzB,MAAC,IAAI,8BACH,CAAC,CACCQ,eAAe,CAAGF,gBAAgB,EAAIX,YAAY,CAAGQ,gBAAgB,CACtE,CACD,CAAC,CAAED,iBAAkB,EACjBJ,KAAK,CAACW,UAAU,eAEnBX,KAAK,CAACM,UAAU,GAErB,GAAG,CAEP,CAAC","names":["React","Rect","Text","CIRCLE_WIDTH","PADDING_LEFT","CHARACTER_WIDTH","LegendItem","props","index","centerAlignedCircle","legendOffset","centerAlignedText","textLengthOffset","legendText","length","legendItemNumber","iconColor","baseLegendItemX","labelProps"],"sources":["/home/syed-f/Code/envmon-web/WebEnv/node_modules/react-native-chart-kit/src/line-chart/LegendItem.tsx"],"sourcesContent":["import React from \"react\";\nimport { Color, Rect, Text, TextProps } from \"react-native-svg\";\n\nconst CIRCLE_WIDTH = 16;\nconst PADDING_LEFT = 4;\nconst CHARACTER_WIDTH = 6;\n\nexport type LegendItemProps = {\n  baseLegendItemX: number;\n  index: number;\n  legendOffset: number;\n  legendText: string;\n  iconColor: Color;\n  labelProps: TextProps;\n};\n\nexport const LegendItem = (props: LegendItemProps) => {\n  const { baseLegendItemX, index } = props;\n  /* half the height of the legend Rect, minus half the height of the circle to align the\n     circle from its center, rather than its top. */\n  const centerAlignedCircle = props.legendOffset / 2 - CIRCLE_WIDTH / 2;\n  // 65% of the legend container height centers the text in relation to the circles\n  const centerAlignedText = props.legendOffset * 0.65;\n  // to center the legendItem on the baseLegendItemX\n  const textLengthOffset = (props.legendText.length * CHARACTER_WIDTH) / 2;\n  const legendItemNumber = index + 1;\n\n  return (\n    <>\n      <Rect\n        width={CIRCLE_WIDTH}\n        height={CIRCLE_WIDTH}\n        fill={props.iconColor}\n        rx={8}\n        ry={8}\n        x={\n          baseLegendItemX * legendItemNumber - (CIRCLE_WIDTH + textLengthOffset)\n        }\n        y={centerAlignedCircle}\n      />\n      <Text\n        x={\n          baseLegendItemX * legendItemNumber + (PADDING_LEFT - textLengthOffset)\n        }\n        y={centerAlignedText}\n        {...props.labelProps}\n      >\n        {props.legendText}\n      </Text>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}