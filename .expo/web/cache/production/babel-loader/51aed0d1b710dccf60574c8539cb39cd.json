{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useState}from'react';import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Pressable from\"react-native-web/dist/exports/Pressable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Icon from\"@expo/vector-icons/FontAwesome\";import{colors0,colors1}from\"./ComponentStyles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=StyleSheet.create({URLArea:{flex:1,flexDirection:'row',padding:6,height:40,marginVertical:5},URLInput:{flex:4,height:40,padding:5,borderRadius:4,borderWidth:1,borderColor:colors1.icej,backgroundColor:'white',fontSize:20,fontFamily:'monospace'},button:{flex:1,height:40,alignItems:'center',justifyContent:'center',borderRadius:4,backgroundColor:colors1.verdigris},active:{backgroundColor:colors0.purplec}});var URLField=function URLField(_ref){var URL=_ref.URL,setURL=_ref.setURL;var _useState=useState(URL),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];if(text!==URL)setText(URL);return _jsxs(View,{style:styles.URLArea,children:[_jsx(TextInput,{onChange:function onChange(e){return setText(e.target.value);},value:text,style:styles.URLInput,onSubmitEditing:function onSubmitEditing(){return setURL(text);},editable:false}),_jsx(Pressable,{onPress:function onPress(){return setURL(text);},style:function style(_ref2){var pressed=_ref2.pressed;return[styles.button,pressed?styles.active:null];},children:_jsx(Icon,{name:\"check\",color:\"white\",iconStyle:{marginRight:5,marginLeft:5},size:26})})]});};export default URLField;","map":{"version":3,"sources":["/home/syed/Code/envmon-web/WebEnv/components/URLBar.js"],"names":["useState","Icon","colors0","colors1","styles","StyleSheet","create","URLArea","flex","flexDirection","padding","height","marginVertical","URLInput","borderRadius","borderWidth","borderColor","icej","backgroundColor","fontSize","fontFamily","button","alignItems","justifyContent","verdigris","active","purplec","URLField","URL","setURL","text","setText","e","target","value","pressed","marginRight","marginLeft"],"mappings":"iEAAA,OAASA,QAAT,KAAyB,OAAzB,C,oPAGA,MAAOC,CAAAA,IAAP,sCACA,OAASC,OAAT,CAAkBC,OAAlB,yB,wFAEA,GAAMC,CAAAA,MAAM,CAAGC,UAAU,CAACC,MAAX,CAAkB,CAC/BC,OAAO,CAAE,CACPC,IAAI,CAAE,CADC,CAEPC,aAAa,CAAE,KAFR,CAGPC,OAAO,CAAE,CAHF,CAIPC,MAAM,CAAE,EAJD,CAKPC,cAAc,CAAE,CALT,CADsB,CAQ/BC,QAAQ,CAAE,CACRL,IAAI,CAAE,CADE,CAERG,MAAM,CAAE,EAFA,CAGRD,OAAO,CAAE,CAHD,CAIRI,YAAY,CAAE,CAJN,CAKRC,WAAW,CAAE,CALL,CAMRC,WAAW,CAAEb,OAAO,CAACc,IANb,CAORC,eAAe,CAAE,OAPT,CAQRC,QAAQ,CAAE,EARF,CASRC,UAAU,CAAE,WATJ,CARqB,CAmB/BC,MAAM,CAAE,CACNb,IAAI,CAAE,CADA,CAENG,MAAM,CAAE,EAFF,CAGNW,UAAU,CAAE,QAHN,CAINC,cAAc,CAAE,QAJV,CAKNT,YAAY,CAAE,CALR,CAMNI,eAAe,CAAEf,OAAO,CAACqB,SANnB,CAnBuB,CA2B/BC,MAAM,CAAE,CACNP,eAAe,CAAEhB,OAAO,CAACwB,OADnB,CA3BuB,CAAlB,CAAf,CAgCA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAqB,IAAlBC,CAAAA,GAAkB,MAAlBA,GAAkB,CAAbC,MAAa,MAAbA,MAAa,CACpC,cAAwB7B,QAAQ,CAAC4B,GAAD,CAAhC,wCAAOE,IAAP,eAAaC,OAAb,eACA,GAAID,IAAI,GAAKF,GAAb,CACEG,OAAO,CAACH,GAAD,CAAP,CACF,MACE,OAAC,IAAD,EAAM,KAAK,CAAExB,MAAM,CAACG,OAApB,WACE,KAAC,SAAD,EAAW,QAAQ,CAAE,kBAACyB,CAAD,QAAOD,CAAAA,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,EAArB,CACE,KAAK,CAAEJ,IADT,CAEE,KAAK,CAAE1B,MAAM,CAACS,QAFhB,CAGE,eAAe,CAAE,iCAAMgB,CAAAA,MAAM,CAACC,IAAD,CAAZ,EAHnB,CAIE,QAAQ,CAAE,KAJZ,EADF,CAOE,KAAC,SAAD,EAAW,OAAO,CAAE,yBAAMD,CAAAA,MAAM,CAACC,IAAD,CAAZ,EAApB,CACE,KAAK,CAAE,yBAAGK,CAAAA,OAAH,OAAGA,OAAH,OAAiB,CACtB/B,MAAM,CAACiB,MADe,CAEtBc,OAAO,CAAG/B,MAAM,CAACqB,MAAV,CAAmB,IAFJ,CAAjB,EADT,UAKE,KAAC,IAAD,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAC,OAFR,CAGE,SAAS,CAAE,CAAEW,WAAW,CAAE,CAAf,CAAkBC,UAAU,CAAE,CAA9B,CAHb,CAIE,IAAI,CAAE,EAJR,EALF,EAPF,GADF,CAqBD,CAzBD,CA2BA,cAAeV,CAAAA,QAAf","sourcesContent":["import { useState } from 'react';\nimport { View, TextInput, Pressable } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { colors0, colors1 } from './ComponentStyles';\n\nconst styles = StyleSheet.create({\n  URLArea: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 6,\n    height: 40,\n    marginVertical: 5\n  },\n  URLInput: {\n    flex: 4,\n    height: 40,\n    padding: 5,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: colors1.icej,\n    backgroundColor: 'white',\n    fontSize: 20,\n    fontFamily: 'monospace'\n  },\n  button: {\n    flex: 1,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    backgroundColor: colors1.verdigris\n  },\n  active: {\n    backgroundColor: colors0.purplec\n  }\n});\n\nconst URLField = ({ URL, setURL }) => {\n  const [text, setText] = useState(URL);\n  if (text !== URL)\n    setText(URL);\n  return (\n    <View style={styles.URLArea}>\n      <TextInput onChange={(e) => setText(e.target.value)}\n        value={text}\n        style={styles.URLInput}\n        onSubmitEditing={() => setURL(text)}\n        editable={false}\n      />\n      <Pressable onPress={() => setURL(text)}\n        style={({ pressed }) => [\n          styles.button,\n          pressed ? styles.active : null]}\n      >\n        <Icon\n          name=\"check\"\n          color=\"white\"\n          iconStyle={{ marginRight: 5, marginLeft: 5 }}\n          size={26}\n        />\n      </Pressable>\n    </View>);\n};\n\nexport default URLField;"]},"metadata":{},"sourceType":"module"}