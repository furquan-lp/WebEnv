{"ast":null,"code":"var __extends=this&&this.__extends||function(){var _extendStatics=function extendStatics(d,b){_extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics(d,b);};return function(d,b){_extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return __assign.apply(this,arguments);};import React from\"react\";import View from\"react-native-web/dist/exports/View\";import{Defs,G,LinearGradient,Rect,Stop,Svg,Text}from\"react-native-svg\";import AbstractChart from\"./AbstractChart\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var barWidth=32;var BarChart=function(_super){__extends(BarChart,_super);function BarChart(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.getBarPercentage=function(){var _a=_this.props.chartConfig.barPercentage,barPercentage=_a===void 0?1:_a;return barPercentage;};_this.renderBars=function(_a){var data=_a.data,width=_a.width,height=_a.height,paddingTop=_a.paddingTop,paddingRight=_a.paddingRight,barRadius=_a.barRadius,withCustomBarColorFromData=_a.withCustomBarColorFromData;var baseHeight=_this.calcBaseHeight(data,height);return data.map(function(x,i){var barHeight=_this.calcHeight(x,data,height);var barWidth=32*_this.getBarPercentage();return _jsx(Rect,{x:paddingRight+i*(width-paddingRight)/data.length+barWidth/2,y:(barHeight>0?baseHeight-barHeight:baseHeight)/4*3+paddingTop,rx:barRadius,width:barWidth,height:Math.abs(barHeight)/4*3,fill:withCustomBarColorFromData?\"url(#customColor_0_\"+i+\")\":\"url(#fillShadowGradientFrom)\"},Math.random());});};_this.renderBarTops=function(_a){var data=_a.data,width=_a.width,height=_a.height,paddingTop=_a.paddingTop,paddingRight=_a.paddingRight;var baseHeight=_this.calcBaseHeight(data,height);return data.map(function(x,i){var barHeight=_this.calcHeight(x,data,height);var barWidth=32*_this.getBarPercentage();return _jsx(Rect,{x:paddingRight+i*(width-paddingRight)/data.length+barWidth/2,y:(baseHeight-barHeight)/4*3+paddingTop,width:barWidth,height:2,fill:_this.props.chartConfig.color(0.6)},Math.random());});};_this.renderColors=function(_a){var data=_a.data,flatColor=_a.flatColor;return data.map(function(dataset,index){var _a,_b;return _jsx(Defs,{children:(_b=dataset.colors)===null||_b===void 0?void 0:_b.map(function(color,colorIndex){var highOpacityColor=color(1.0);var lowOpacityColor=color(0.1);return _jsxs(LinearGradient,{id:\"customColor_\"+index+\"_\"+colorIndex,x1:0,y1:0,x2:0,y2:1,children:[_jsx(Stop,{offset:\"0\",stopColor:highOpacityColor,stopOpacity:\"1\"}),flatColor?_jsx(Stop,{offset:\"1\",stopColor:highOpacityColor,stopOpacity:\"1\"}):_jsx(Stop,{offset:\"1\",stopColor:lowOpacityColor,stopOpacity:\"0\"})]},index+\"_\"+colorIndex);})},(_a=dataset.key)!==null&&_a!==void 0?_a:index);});};_this.renderValuesOnTopOfBars=function(_a){var data=_a.data,width=_a.width,height=_a.height,paddingTop=_a.paddingTop,paddingRight=_a.paddingRight;var baseHeight=_this.calcBaseHeight(data,height);var renderLabel=function renderLabel(value){if(_this.props.chartConfig.formatTopBarValue){return _this.props.chartConfig.formatTopBarValue(value);}else{return value;}};return data.map(function(x,i){var barHeight=_this.calcHeight(x,data,height);var barWidth=32*_this.getBarPercentage();return _jsx(Text,{x:paddingRight+i*(width-paddingRight)/data.length+barWidth/1,y:(baseHeight-barHeight)/4*3+paddingTop-1,fill:_this.props.chartConfig.color(0.6),fontSize:\"12\",textAnchor:\"middle\",children:renderLabel(data[i])},Math.random());});};return _this;}BarChart.prototype.render=function(){var _a;var _b=this.props,width=_b.width,height=_b.height,data=_b.data,_c=_b.style,style=_c===void 0?{}:_c,_d=_b.withHorizontalLabels,withHorizontalLabels=_d===void 0?true:_d,_e=_b.withVerticalLabels,withVerticalLabels=_e===void 0?true:_e,_f=_b.verticalLabelRotation,verticalLabelRotation=_f===void 0?0:_f,_g=_b.horizontalLabelRotation,horizontalLabelRotation=_g===void 0?0:_g,_h=_b.withInnerLines,withInnerLines=_h===void 0?true:_h,_j=_b.showBarTops,showBarTops=_j===void 0?true:_j,_k=_b.withCustomBarColorFromData,withCustomBarColorFromData=_k===void 0?false:_k,_l=_b.showValuesOnTopOfBars,showValuesOnTopOfBars=_l===void 0?false:_l,_m=_b.flatColor,flatColor=_m===void 0?false:_m,_o=_b.segments,segments=_o===void 0?4:_o;var _p=style.borderRadius,borderRadius=_p===void 0?0:_p,_q=style.paddingTop,paddingTop=_q===void 0?16:_q,_r=style.paddingRight,paddingRight=_r===void 0?64:_r;var config={width:width,height:height,verticalLabelRotation:verticalLabelRotation,horizontalLabelRotation:horizontalLabelRotation,barRadius:this.props.chartConfig&&this.props.chartConfig.barRadius||0,decimalPlaces:(_a=this.props.chartConfig&&this.props.chartConfig.decimalPlaces)!==null&&_a!==void 0?_a:2,formatYLabel:this.props.chartConfig&&this.props.chartConfig.formatYLabel||function(label){return label;},formatXLabel:this.props.chartConfig&&this.props.chartConfig.formatXLabel||function(label){return label;}};return _jsx(View,{style:style,children:_jsxs(Svg,{height:height,width:width,children:[this.renderDefs(__assign(__assign({},config),this.props.chartConfig)),this.renderColors(__assign(__assign({},this.props.chartConfig),{flatColor:flatColor,data:this.props.data.datasets})),_jsx(Rect,{width:\"100%\",height:height,rx:borderRadius,ry:borderRadius,fill:\"url(#backgroundGradient)\"}),_jsx(G,{children:withInnerLines?this.renderHorizontalLines(__assign(__assign({},config),{count:segments,paddingTop:paddingTop})):null}),_jsx(G,{children:withHorizontalLabels?this.renderHorizontalLabels(__assign(__assign({},config),{count:segments,data:data.datasets[0].data,paddingTop:paddingTop,paddingRight:paddingRight})):null}),_jsx(G,{children:withVerticalLabels?this.renderVerticalLabels(__assign(__assign({},config),{labels:data.labels,paddingRight:paddingRight,paddingTop:paddingTop,horizontalOffset:barWidth*this.getBarPercentage()})):null}),_jsx(G,{children:this.renderBars(__assign(__assign({},config),{data:data.datasets[0].data,paddingTop:paddingTop,paddingRight:paddingRight,withCustomBarColorFromData:withCustomBarColorFromData}))}),_jsx(G,{children:showValuesOnTopOfBars&&this.renderValuesOnTopOfBars(__assign(__assign({},config),{data:data.datasets[0].data,paddingTop:paddingTop,paddingRight:paddingRight}))}),_jsx(G,{children:showBarTops&&this.renderBarTops(__assign(__assign({},config),{data:data.datasets[0].data,paddingTop:paddingTop,paddingRight:paddingRight}))})]})});};return BarChart;}(AbstractChart);export default BarChart;","map":{"version":3,"sources":["../src/BarChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport {\n  Defs,\n  G,\n  LinearGradient,\n  Rect,\n  Stop,\n  Svg,\n  Text\n} from \"react-native-svg\";\n\nimport AbstractChart, {\n  AbstractChartConfig,\n  AbstractChartProps\n} from \"./AbstractChart\";\nimport { ChartData } from \"./HelperTypes\";\n\nconst barWidth = 32;\n\nexport interface BarChartProps extends AbstractChartProps {\n  data: ChartData;\n  width: number;\n  height: number;\n  fromZero?: boolean;\n  withInnerLines?: boolean;\n  yAxisLabel: string;\n  yAxisSuffix: string;\n  chartConfig: AbstractChartConfig;\n  style?: Partial<ViewStyle>;\n  horizontalLabelRotation?: number;\n  verticalLabelRotation?: number;\n  /**\n   * Show vertical labels - default: True.\n   */\n  withVerticalLabels?: boolean;\n  /**\n   * Show horizontal labels - default: True.\n   */\n  withHorizontalLabels?: boolean;\n  /**\n   * The number of horizontal lines\n   */\n  segments?: number;\n  showBarTops?: boolean;\n  showValuesOnTopOfBars?: boolean;\n  withCustomBarColorFromData?: boolean;\n  flatColor?: boolean;\n  \n}\n\ntype BarChartState = {};\n\nclass BarChart extends AbstractChart<BarChartProps, BarChartState> {\n  getBarPercentage = () => {\n    const { barPercentage = 1 } = this.props.chartConfig;\n    return barPercentage;\n  };\n\n  renderBars = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight,\n    barRadius,\n    withCustomBarColorFromData\n  }: Pick<\n    Omit<AbstractChartConfig, \"data\">,\n    \"width\" | \"height\" | \"paddingRight\" | \"paddingTop\" | \"barRadius\"\n  > & {\n    data: number[];\n    withCustomBarColorFromData: boolean;\n  }) => {\n    const baseHeight = this.calcBaseHeight(data, height);\n\n    return data.map((x, i) => {\n      const barHeight = this.calcHeight(x, data, height);\n      const barWidth = 32 * this.getBarPercentage();\n      return (\n        <Rect\n          key={Math.random()}\n          x={\n            paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 2\n          }\n          y={\n            ((barHeight > 0 ? baseHeight - barHeight : baseHeight) / 4) * 3 +\n            paddingTop\n          }\n          rx={barRadius}\n          width={barWidth}\n          height={(Math.abs(barHeight) / 4) * 3}\n          fill={\n            withCustomBarColorFromData\n              ? `url(#customColor_0_${i})`\n              : \"url(#fillShadowGradientFrom)\"\n          }\n        />\n      );\n    });\n  };\n\n  renderBarTops = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight\n  }: Pick<\n    Omit<AbstractChartConfig, \"data\">,\n    \"width\" | \"height\" | \"paddingRight\" | \"paddingTop\"\n  > & {\n    data: number[];\n  }) => {\n    const baseHeight = this.calcBaseHeight(data, height);\n\n    return data.map((x, i) => {\n      const barHeight = this.calcHeight(x, data, height);\n      const barWidth = 32 * this.getBarPercentage();\n      return (\n        <Rect\n          key={Math.random()}\n          x={\n            paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 2\n          }\n          y={((baseHeight - barHeight) / 4) * 3 + paddingTop}\n          width={barWidth}\n          height={2}\n          fill={this.props.chartConfig.color(0.6)}\n        />\n      );\n    });\n  };\n\n  renderColors = ({\n    data,\n    flatColor\n  }: Pick<AbstractChartConfig, \"data\"> & {\n    flatColor: boolean;\n  }) => {\n    return data.map((dataset, index) => (\n      <Defs key={dataset.key ?? index}>\n        {dataset.colors?.map((color, colorIndex) => {\n          const highOpacityColor = color(1.0);\n          const lowOpacityColor = color(0.1);\n\n          return (\n            <LinearGradient\n              id={`customColor_${index}_${colorIndex}`}\n              key={`${index}_${colorIndex}`}\n              x1={0}\n              y1={0}\n              x2={0}\n              y2={1}\n            >\n              <Stop offset=\"0\" stopColor={highOpacityColor} stopOpacity=\"1\" />\n              {flatColor ? (\n                <Stop offset=\"1\" stopColor={highOpacityColor} stopOpacity=\"1\" />\n              ) : (\n                  <Stop offset=\"1\" stopColor={lowOpacityColor} stopOpacity=\"0\" />\n                )}\n            </LinearGradient>\n          );\n        })}\n      </Defs>\n    ));\n  };\n\n  renderValuesOnTopOfBars = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight\n  }: Pick<\n    Omit<AbstractChartConfig, \"data\">,\n    \"width\" | \"height\" | \"paddingRight\" | \"paddingTop\"\n  > & {\n    data: number[];\n  }) => {\n    const baseHeight = this.calcBaseHeight(data, height);\n\n    const renderLabel = (value: number) => {\n      if(this.props.chartConfig.formatTopBarValue) {\n        return this.props.chartConfig.formatTopBarValue(value)\n      }\n      else {\n        return value\n      }\n    }\n    return data.map((x, i) => {\n      const barHeight = this.calcHeight(x, data, height);\n      const barWidth = 32 * this.getBarPercentage();\n      return (\n        <Text\n          key={Math.random()}\n          x={\n            paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 1\n            \n          }\n          y={((baseHeight - barHeight) / 4) * 3 + paddingTop - 1}\n          fill={this.props.chartConfig.color(0.6)}\n          fontSize=\"12\"\n          textAnchor=\"middle\"\n        >\n          {renderLabel(data[i])}\n        </Text>\n      );\n    });\n  };\n\n  render() {\n    const {\n      width,\n      height,\n      data,\n      style = {},\n      withHorizontalLabels = true,\n      withVerticalLabels = true,\n      verticalLabelRotation = 0,\n      horizontalLabelRotation = 0,\n      withInnerLines = true,\n      showBarTops = true,\n      withCustomBarColorFromData = false,\n      showValuesOnTopOfBars = false,\n      flatColor = false,\n      segments = 4\n    } = this.props;\n\n    const { borderRadius = 0, paddingTop = 16, paddingRight = 64 } = style;\n\n    const config = {\n      width,\n      height,\n      verticalLabelRotation,\n      horizontalLabelRotation,\n      barRadius:\n        (this.props.chartConfig && this.props.chartConfig.barRadius) || 0,\n      decimalPlaces:\n        (this.props.chartConfig && this.props.chartConfig.decimalPlaces) ?? 2,\n      formatYLabel:\n        (this.props.chartConfig && this.props.chartConfig.formatYLabel) ||\n        function (label) {\n          return label;\n        },\n      formatXLabel:\n        (this.props.chartConfig && this.props.chartConfig.formatXLabel) ||\n        function (label) {\n          return label;\n        }\n    };\n\n    return (\n      <View style={style}>\n        <Svg height={height} width={width}>\n          {this.renderDefs({\n            ...config,\n            ...this.props.chartConfig\n          })}\n          {this.renderColors({\n            ...this.props.chartConfig,\n            flatColor: flatColor,\n            data: this.props.data.datasets\n          })}\n          <Rect\n            width=\"100%\"\n            height={height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G>\n            {withInnerLines\n              ? this.renderHorizontalLines({\n                ...config,\n                count: segments,\n                paddingTop\n              })\n              : null}\n          </G>\n          <G>\n            {withHorizontalLabels\n              ? this.renderHorizontalLabels({\n                ...config,\n                count: segments,\n                data: data.datasets[0].data,\n                paddingTop: paddingTop as number,\n                paddingRight: paddingRight as number\n              })\n              : null}\n          </G>\n          <G>\n            {withVerticalLabels\n              ? this.renderVerticalLabels({\n                ...config,\n                labels: data.labels,\n                paddingRight: paddingRight as number,\n                paddingTop: paddingTop as number,\n                horizontalOffset: barWidth * this.getBarPercentage()\n              })\n              : null}\n          </G>\n          <G>\n            {this.renderBars({\n              ...config,\n              data: data.datasets[0].data,\n              paddingTop: paddingTop as number,\n              paddingRight: paddingRight as number,\n              withCustomBarColorFromData: withCustomBarColorFromData\n            })}\n          </G>\n          <G>\n            {showValuesOnTopOfBars &&\n              this.renderValuesOnTopOfBars({\n                ...config,\n                data: data.datasets[0].data,\n                paddingTop: paddingTop as number,\n                paddingRight: paddingRight as number\n              })}\n          </G>\n          <G>\n            {showBarTops &&\n              this.renderBarTops({\n                ...config,\n                data: data.datasets[0].data,\n                paddingTop: paddingTop as number,\n                paddingRight: paddingRight as number\n              })}\n          </G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default BarChart;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}