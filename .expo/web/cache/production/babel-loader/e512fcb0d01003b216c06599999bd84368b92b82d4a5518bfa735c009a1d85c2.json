{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}var __extends=this&&this.__extends||function(){var _extendStatics=function extendStatics(d,b){_extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics(d,b);};return function(d,b){_extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return __assign.apply(this,arguments);};import React from\"react\";import View from\"react-native-web/dist/exports/View\";import{G,Rect,Svg,Text}from\"react-native-svg\";import AbstractChart,{DEFAULT_X_LABELS_HEIGHT_PERCENTAGE}from\"./AbstractChart\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StackedBarChart=function(_super){__extends(StackedBarChart,_super);function StackedBarChart(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.getBarPercentage=function(){var _a=_this.props.chartConfig.barPercentage,barPercentage=_a===void 0?1:_a;return barPercentage;};_this.getBarRadius=function(ret,x){return _this.props.chartConfig.barRadius&&ret.length===x.length-1?_this.props.chartConfig.barRadius:0;};_this.renderBars=function(_a){var data=_a.data,width=_a.width,height=_a.height,paddingTop=_a.paddingTop,paddingRight=_a.paddingRight,border=_a.border,colors=_a.colors,_b=_a.stackedBar,stackedBar=_b===void 0?false:_b,verticalLabelsHeightPercentage=_a.verticalLabelsHeightPercentage;return data.map(function(x,i){var barWidth=32*_this.getBarPercentage();var ret=[];var h=0;var st=paddingTop;var fac=1;if(stackedBar){fac=0.7;}var sum=_this.props.percentile?x.reduce(function(a,b){return a+b;},0):border;var barsAreaHeight=height*verticalLabelsHeightPercentage;for(var z=0;z<x.length;z++){h=barsAreaHeight*(x[z]/sum);var y=barsAreaHeight-h+st;var xC=(paddingRight+i*(width-paddingRight)/data.length+barWidth/2)*fac;ret.push(_jsx(Rect,{x:xC,y:y,rx:_this.getBarRadius(ret,x),ry:_this.getBarRadius(ret,x),width:barWidth,height:h,fill:colors[z]},Math.random()));if(!_this.props.hideLegend){ret.push(_jsx(Text,_objectSpread(_objectSpread({x:xC+7+barWidth/2,textAnchor:\"end\",y:h>15?y+15:y+7},_this.getPropsForLabels()),{},{children:x[z]}),Math.random()));}st-=h;}return ret;});};_this.renderLegend=function(_a){var legend=_a.legend,colors=_a.colors,width=_a.width,height=_a.height;return legend.map(function(x,i){return _jsxs(G,{children:[_jsx(Rect,{width:\"16px\",height:\"16px\",fill:colors[i],rx:8,ry:8,x:width*0.71,y:height*0.7-i*50}),_jsx(Text,_objectSpread(_objectSpread({x:width*0.78,y:height*0.76-i*50},_this.getPropsForLabels()),{},{children:x}))]},Math.random());});};return _this;}StackedBarChart.prototype.render=function(){var paddingTop=15;var paddingRight=50;var barWidth=32*this.getBarPercentage();var _a=this.props,width=_a.width,height=_a.height,_b=_a.style,style=_b===void 0?{}:_b,data=_a.data,_c=_a.withHorizontalLabels,withHorizontalLabels=_c===void 0?true:_c,_d=_a.withVerticalLabels,withVerticalLabels=_d===void 0?true:_d,_e=_a.segments,segments=_e===void 0?4:_e,decimalPlaces=_a.decimalPlaces,_f=_a.percentile,percentile=_f===void 0?false:_f,_g=_a.verticalLabelsHeightPercentage,verticalLabelsHeightPercentage=_g===void 0?DEFAULT_X_LABELS_HEIGHT_PERCENTAGE:_g,_h=_a.formatYLabel,formatYLabel=_h===void 0?function(yLabel){return yLabel;}:_h,_j=_a.hideLegend,hideLegend=_j===void 0?false:_j;var _k=style.borderRadius,borderRadius=_k===void 0?0:_k;var config={width:width,height:height};var border=0;var max=0;for(var i=0;i<data.data.length;i++){var actual=data.data[i].reduce(function(pv,cv){return pv+cv;},0);if(actual>max){max=actual;}}if(percentile){border=100;}else{border=max;}var showLegend=!hideLegend&&data.legend&&data.legend.length!=0;var stackedBar=showLegend;return _jsx(View,{style:style,children:_jsxs(Svg,{height:height,width:width,children:[this.renderDefs(__assign(__assign({},config),this.props.chartConfig)),_jsx(Rect,{width:\"100%\",height:height,rx:borderRadius,ry:borderRadius,fill:\"url(#backgroundGradient)\"}),_jsx(G,{children:this.renderHorizontalLines(__assign(__assign({},config),{count:segments,paddingTop:paddingTop,verticalLabelsHeightPercentage:verticalLabelsHeightPercentage}))}),_jsx(G,{children:withHorizontalLabels?this.renderHorizontalLabels(__assign(__assign({},config),{count:segments,data:[0,border],paddingTop:paddingTop,paddingRight:paddingRight,decimalPlaces:decimalPlaces,verticalLabelsHeightPercentage:verticalLabelsHeightPercentage,formatYLabel:formatYLabel})):null}),_jsx(G,{children:withVerticalLabels?this.renderVerticalLabels(__assign(__assign({},config),{labels:data.labels,paddingRight:paddingRight+28,stackedBar:stackedBar,paddingTop:paddingTop,horizontalOffset:barWidth,verticalLabelsHeightPercentage:verticalLabelsHeightPercentage})):null}),_jsx(G,{children:this.renderBars(__assign(__assign({},config),{data:data.data,border:border,colors:this.props.data.barColors,paddingTop:paddingTop,paddingRight:paddingRight+20,stackedBar:stackedBar,verticalLabelsHeightPercentage:verticalLabelsHeightPercentage}))}),showLegend&&this.renderLegend(__assign(__assign({},config),{legend:data.legend,colors:this.props.data.barColors}))]})});};return StackedBarChart;}(AbstractChart);export default StackedBarChart;","map":{"version":3,"mappings":"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","names":["React","G","Rect","Svg","Text","AbstractChart","DEFAULT_X_LABELS_HEIGHT_PERCENTAGE","__extends","_this","props","chartConfig","barPercentage","ret","x","barRadius","length","_a","data","width","height","paddingTop","paddingRight","border","colors","_b","stackedBar","verticalLabelsHeightPercentage","map","i","barWidth","getBarPercentage","h","st","fac","sum","percentile","reduce","a","b","barsAreaHeight","z","y","xC","push","getBarRadius","Math","random","hideLegend","getPropsForLabels","legend","StackedBarChart","style","_c","withHorizontalLabels","_d","withVerticalLabels","_e","segments","decimalPlaces","_f","_g","_h","formatYLabel","yLabel","_j","borderRadius","config","max","actual","pv","cv","showLegend","renderDefs","renderHorizontalLines","count","renderHorizontalLabels","renderVerticalLabels","labels","horizontalOffset","renderBars","barColors","renderLegend"],"sources":["/home/syed-f/Code/envmon-web/WebEnv/node_modules/react-native-chart-kit/src/StackedBarChart.tsx"],"sourcesContent":["import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { G, Rect, Svg, Text } from \"react-native-svg\";\n\nimport AbstractChart, {\n  AbstractChartConfig,\n  AbstractChartProps,\n  DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n} from \"./AbstractChart\";\n\nexport interface StackedBarChartData {\n  labels: string[];\n  legend: string[];\n  data: number[][];\n  barColors: string[];\n}\n\nexport interface StackedBarChartProps extends AbstractChartProps {\n  /**\n   * E.g.\n   * ```javascript\n   * const data = {\n   *   labels: [\"Test1\", \"Test2\"],\n   *   legend: [\"L1\", \"L2\", \"L3\"],\n   *   data: [[60, 60, 60], [30, 30, 60]],\n   *   barColors: [\"#dfe4ea\", \"#ced6e0\", \"#a4b0be\"]\n   * };\n   * ```\n   */\n  data: StackedBarChartData;\n  width: number;\n  height: number;\n  chartConfig: AbstractChartConfig;\n  hideLegend: boolean;\n  style?: Partial<ViewStyle>;\n  barPercentage?: number;\n  decimalPlaces?: number;\n  /**\n   * Show vertical labels - default: True.\n   */\n  withVerticalLabels?: boolean;\n  /**\n   * Show horizontal labels - default: True.\n   */\n  withHorizontalLabels?: boolean;\n  /**\n   * The number of horizontal lines\n   */\n  segments?: number;\n\n  percentile?: boolean;\n\n  /**\n   * Percentage of the chart height, dedicated to vertical labels\n   * (space below chart)\n   */\n  verticalLabelsHeightPercentage?: number;\n\n  formatYLabel?: (yLabel: string) => string;\n}\n\ntype StackedBarChartState = {};\n\nclass StackedBarChart extends AbstractChart<\n  StackedBarChartProps,\n  StackedBarChartState\n> {\n  getBarPercentage = () => {\n    const { barPercentage = 1 } = this.props.chartConfig;\n    return barPercentage;\n  };\n\n  getBarRadius = (ret: string | any[], x: string | any[]) => {\n    return this.props.chartConfig.barRadius && ret.length === x.length - 1\n      ? this.props.chartConfig.barRadius\n      : 0;\n  };\n\n  renderBars = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight,\n    border,\n    colors,\n    stackedBar = false,\n    verticalLabelsHeightPercentage\n  }: Pick<\n    Omit<AbstractChartConfig, \"data\">,\n    | \"width\"\n    | \"height\"\n    | \"paddingRight\"\n    | \"paddingTop\"\n    | \"stackedBar\"\n    | \"verticalLabelsHeightPercentage\"\n  > & {\n    border: number;\n    colors: string[];\n    data: number[][];\n  }) =>\n    data.map((x, i) => {\n      const barWidth = 32 * this.getBarPercentage();\n      const ret = [];\n      let h = 0;\n      let st = paddingTop;\n\n      let fac = 1;\n      if (stackedBar) {\n        fac = 0.7;\n      }\n      const sum = this.props.percentile ? x.reduce((a, b) => a + b, 0) : border;\n      const barsAreaHeight = height * verticalLabelsHeightPercentage;\n      for (let z = 0; z < x.length; z++) {\n        h = barsAreaHeight * (x[z] / sum);\n        const y = barsAreaHeight - h + st;\n        const xC =\n          (paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 2) *\n          fac;\n\n        ret.push(\n          <Rect\n            key={Math.random()}\n            x={xC}\n            y={y}\n            rx={this.getBarRadius(ret, x)}\n            ry={this.getBarRadius(ret, x)}\n            width={barWidth}\n            height={h}\n            fill={colors[z]}\n          />\n        );\n\n        if (!this.props.hideLegend) {\n          ret.push(\n            <Text\n              key={Math.random()}\n              x={xC + 7 + barWidth / 2}\n              textAnchor=\"end\"\n              y={h > 15 ? y + 15 : y + 7}\n              {...this.getPropsForLabels()}\n            >\n              {x[z]}\n            </Text>\n          );\n        }\n\n        st -= h;\n      }\n\n      return ret;\n    });\n\n  renderLegend = ({\n    legend,\n    colors,\n    width,\n    height\n  }: Pick<AbstractChartConfig, \"width\" | \"height\"> & {\n    legend: string[];\n    colors: string[];\n  }) =>\n    legend.map((x, i) => {\n      return (\n        <G key={Math.random()}>\n          <Rect\n            width=\"16px\"\n            height=\"16px\"\n            fill={colors[i]}\n            rx={8}\n            ry={8}\n            x={width * 0.71}\n            y={height * 0.7 - i * 50}\n          />\n          <Text\n            x={width * 0.78}\n            y={height * 0.76 - i * 50}\n            {...this.getPropsForLabels()}\n          >\n            {x}\n          </Text>\n        </G>\n      );\n    });\n\n  render() {\n    const paddingTop = 15;\n    const paddingRight = 50;\n    const barWidth = 32 * this.getBarPercentage();\n\n    const {\n      width,\n      height,\n      style = {},\n      data,\n      withHorizontalLabels = true,\n      withVerticalLabels = true,\n      segments = 4,\n      decimalPlaces,\n      percentile = false,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE,\n      formatYLabel = (yLabel: string) => {\n        return yLabel;\n      },\n      hideLegend = false\n    } = this.props;\n\n    const { borderRadius = 0 } = style;\n    const config = {\n      width,\n      height\n    };\n\n    let border = 0;\n\n    let max = 0;\n    for (let i = 0; i < data.data.length; i++) {\n      const actual = data.data[i].reduce((pv, cv) => pv + cv, 0);\n      if (actual > max) {\n        max = actual;\n      }\n    }\n\n    if (percentile) {\n      border = 100;\n    } else {\n      border = max;\n    }\n\n    const showLegend = !hideLegend && data.legend && data.legend.length != 0;\n    const stackedBar = showLegend;\n\n    return (\n      <View style={style}>\n        <Svg height={height} width={width}>\n          {this.renderDefs({\n            ...config,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G>\n            {this.renderHorizontalLines({\n              ...config,\n              count: segments,\n              paddingTop,\n              verticalLabelsHeightPercentage\n            })}\n          </G>\n          <G>\n            {withHorizontalLabels\n              ? this.renderHorizontalLabels({\n                  ...config,\n                  count: segments,\n                  data: [0, border],\n                  paddingTop,\n                  paddingRight,\n                  decimalPlaces,\n                  verticalLabelsHeightPercentage,\n                  formatYLabel\n                })\n              : null}\n          </G>\n          <G>\n            {withVerticalLabels\n              ? this.renderVerticalLabels({\n                  ...config,\n                  labels: data.labels,\n                  paddingRight: paddingRight + 28,\n                  stackedBar,\n                  paddingTop,\n                  horizontalOffset: barWidth,\n                  verticalLabelsHeightPercentage\n                })\n              : null}\n          </G>\n          <G>\n            {this.renderBars({\n              ...config,\n              data: data.data,\n              border,\n              colors: this.props.data.barColors,\n              paddingTop,\n              paddingRight: paddingRight + 20,\n              stackedBar,\n              verticalLabelsHeightPercentage\n            })}\n          </G>\n          {showLegend &&\n            this.renderLegend({\n              ...config,\n              legend: data.legend,\n              colors: this.props.data.barColors\n            })}\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default StackedBarChart;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}