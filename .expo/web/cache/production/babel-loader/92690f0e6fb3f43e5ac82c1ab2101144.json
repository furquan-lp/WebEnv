{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}var __extends=this&&this.__extends||function(){var _extendStatics=function extendStatics(d,b){_extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics(d,b);};return function(d,b){_extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return __assign.apply(this,arguments);};import React from\"react\";import View from\"react-native-web/dist/exports/View\";import{G,Rect,Svg,Text}from\"react-native-svg\";import AbstractChart,{DEFAULT_X_LABELS_HEIGHT_PERCENTAGE}from\"./AbstractChart\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StackedBarChart=function(_super){__extends(StackedBarChart,_super);function StackedBarChart(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.getBarPercentage=function(){var _a=_this.props.chartConfig.barPercentage,barPercentage=_a===void 0?1:_a;return barPercentage;};_this.getBarRadius=function(ret,x){return _this.props.chartConfig.barRadius&&ret.length===x.length-1?_this.props.chartConfig.barRadius:0;};_this.renderBars=function(_a){var data=_a.data,width=_a.width,height=_a.height,paddingTop=_a.paddingTop,paddingRight=_a.paddingRight,border=_a.border,colors=_a.colors,_b=_a.stackedBar,stackedBar=_b===void 0?false:_b,verticalLabelsHeightPercentage=_a.verticalLabelsHeightPercentage;return data.map(function(x,i){var barWidth=32*_this.getBarPercentage();var ret=[];var h=0;var st=paddingTop;var fac=1;if(stackedBar){fac=0.7;}var sum=_this.props.percentile?x.reduce(function(a,b){return a+b;},0):border;var barsAreaHeight=height*verticalLabelsHeightPercentage;for(var z=0;z<x.length;z++){h=barsAreaHeight*(x[z]/sum);var y=barsAreaHeight-h+st;var xC=(paddingRight+i*(width-paddingRight)/data.length+barWidth/2)*fac;ret.push(_jsx(Rect,{x:xC,y:y,rx:_this.getBarRadius(ret,x),ry:_this.getBarRadius(ret,x),width:barWidth,height:h,fill:colors[z]},Math.random()));if(!_this.props.hideLegend){ret.push(_jsx(Text,_objectSpread(_objectSpread({x:xC+7+barWidth/2,textAnchor:\"end\",y:h>15?y+15:y+7},_this.getPropsForLabels()),{},{children:x[z]}),Math.random()));}st-=h;}return ret;});};_this.renderLegend=function(_a){var legend=_a.legend,colors=_a.colors,width=_a.width,height=_a.height;return legend.map(function(x,i){return _jsxs(G,{children:[_jsx(Rect,{width:\"16px\",height:\"16px\",fill:colors[i],rx:8,ry:8,x:width*0.71,y:height*0.7-i*50}),_jsx(Text,_objectSpread(_objectSpread({x:width*0.78,y:height*0.76-i*50},_this.getPropsForLabels()),{},{children:x}))]},Math.random());});};return _this;}StackedBarChart.prototype.render=function(){var paddingTop=15;var paddingRight=50;var barWidth=32*this.getBarPercentage();var _a=this.props,width=_a.width,height=_a.height,_b=_a.style,style=_b===void 0?{}:_b,data=_a.data,_c=_a.withHorizontalLabels,withHorizontalLabels=_c===void 0?true:_c,_d=_a.withVerticalLabels,withVerticalLabels=_d===void 0?true:_d,_e=_a.segments,segments=_e===void 0?4:_e,decimalPlaces=_a.decimalPlaces,_f=_a.percentile,percentile=_f===void 0?false:_f,_g=_a.verticalLabelsHeightPercentage,verticalLabelsHeightPercentage=_g===void 0?DEFAULT_X_LABELS_HEIGHT_PERCENTAGE:_g,_h=_a.formatYLabel,formatYLabel=_h===void 0?function(yLabel){return yLabel;}:_h,_j=_a.hideLegend,hideLegend=_j===void 0?false:_j;var _k=style.borderRadius,borderRadius=_k===void 0?0:_k;var config={width:width,height:height};var border=0;var max=0;for(var i=0;i<data.data.length;i++){var actual=data.data[i].reduce(function(pv,cv){return pv+cv;},0);if(actual>max){max=actual;}}if(percentile){border=100;}else{border=max;}var showLegend=!hideLegend&&data.legend&&data.legend.length!=0;var stackedBar=showLegend;return _jsx(View,{style:style,children:_jsxs(Svg,{height:height,width:width,children:[this.renderDefs(__assign(__assign({},config),this.props.chartConfig)),_jsx(Rect,{width:\"100%\",height:height,rx:borderRadius,ry:borderRadius,fill:\"url(#backgroundGradient)\"}),_jsx(G,{children:this.renderHorizontalLines(__assign(__assign({},config),{count:segments,paddingTop:paddingTop,verticalLabelsHeightPercentage:verticalLabelsHeightPercentage}))}),_jsx(G,{children:withHorizontalLabels?this.renderHorizontalLabels(__assign(__assign({},config),{count:segments,data:[0,border],paddingTop:paddingTop,paddingRight:paddingRight,decimalPlaces:decimalPlaces,verticalLabelsHeightPercentage:verticalLabelsHeightPercentage,formatYLabel:formatYLabel})):null}),_jsx(G,{children:withVerticalLabels?this.renderVerticalLabels(__assign(__assign({},config),{labels:data.labels,paddingRight:paddingRight+28,stackedBar:stackedBar,paddingTop:paddingTop,horizontalOffset:barWidth,verticalLabelsHeightPercentage:verticalLabelsHeightPercentage})):null}),_jsx(G,{children:this.renderBars(__assign(__assign({},config),{data:data.data,border:border,colors:this.props.data.barColors,paddingTop:paddingTop,paddingRight:paddingRight+20,stackedBar:stackedBar,verticalLabelsHeightPercentage:verticalLabelsHeightPercentage}))}),showLegend&&this.renderLegend(__assign(__assign({},config),{legend:data.legend,colors:this.props.data.barColors}))]})});};return StackedBarChart;}(AbstractChart);export default StackedBarChart;","map":{"version":3,"sources":["../src/StackedBarChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { G, Rect, Svg, Text } from \"react-native-svg\";\n\nimport AbstractChart, {\n  AbstractChartConfig,\n  AbstractChartProps,\n  DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n} from \"./AbstractChart\";\n\nexport interface StackedBarChartData {\n  labels: string[];\n  legend: string[];\n  data: number[][];\n  barColors: string[];\n}\n\nexport interface StackedBarChartProps extends AbstractChartProps {\n  /**\n   * E.g.\n   * ```javascript\n   * const data = {\n   *   labels: [\"Test1\", \"Test2\"],\n   *   legend: [\"L1\", \"L2\", \"L3\"],\n   *   data: [[60, 60, 60], [30, 30, 60]],\n   *   barColors: [\"#dfe4ea\", \"#ced6e0\", \"#a4b0be\"]\n   * };\n   * ```\n   */\n  data: StackedBarChartData;\n  width: number;\n  height: number;\n  chartConfig: AbstractChartConfig;\n  hideLegend: boolean;\n  style?: Partial<ViewStyle>;\n  barPercentage?: number;\n  decimalPlaces?: number;\n  /**\n   * Show vertical labels - default: True.\n   */\n  withVerticalLabels?: boolean;\n  /**\n   * Show horizontal labels - default: True.\n   */\n  withHorizontalLabels?: boolean;\n  /**\n   * The number of horizontal lines\n   */\n  segments?: number;\n\n  percentile?: boolean;\n\n  /**\n   * Percentage of the chart height, dedicated to vertical labels\n   * (space below chart)\n   */\n  verticalLabelsHeightPercentage?: number;\n\n  formatYLabel?: (yLabel: string) => string;\n}\n\ntype StackedBarChartState = {};\n\nclass StackedBarChart extends AbstractChart<\n  StackedBarChartProps,\n  StackedBarChartState\n> {\n  getBarPercentage = () => {\n    const { barPercentage = 1 } = this.props.chartConfig;\n    return barPercentage;\n  };\n\n  getBarRadius = (ret: string | any[], x: string | any[]) => {\n    return this.props.chartConfig.barRadius && ret.length === x.length - 1\n      ? this.props.chartConfig.barRadius\n      : 0;\n  };\n\n  renderBars = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight,\n    border,\n    colors,\n    stackedBar = false,\n    verticalLabelsHeightPercentage\n  }: Pick<\n    Omit<AbstractChartConfig, \"data\">,\n    | \"width\"\n    | \"height\"\n    | \"paddingRight\"\n    | \"paddingTop\"\n    | \"stackedBar\"\n    | \"verticalLabelsHeightPercentage\"\n  > & {\n    border: number;\n    colors: string[];\n    data: number[][];\n  }) =>\n    data.map((x, i) => {\n      const barWidth = 32 * this.getBarPercentage();\n      const ret = [];\n      let h = 0;\n      let st = paddingTop;\n\n      let fac = 1;\n      if (stackedBar) {\n        fac = 0.7;\n      }\n      const sum = this.props.percentile ? x.reduce((a, b) => a + b, 0) : border;\n      const barsAreaHeight = height * verticalLabelsHeightPercentage;\n      for (let z = 0; z < x.length; z++) {\n        h = barsAreaHeight * (x[z] / sum);\n        const y = barsAreaHeight - h + st;\n        const xC =\n          (paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 2) *\n          fac;\n\n        ret.push(\n          <Rect\n            key={Math.random()}\n            x={xC}\n            y={y}\n            rx={this.getBarRadius(ret, x)}\n            ry={this.getBarRadius(ret, x)}\n            width={barWidth}\n            height={h}\n            fill={colors[z]}\n          />\n        );\n\n        if (!this.props.hideLegend) {\n          ret.push(\n            <Text\n              key={Math.random()}\n              x={xC + 7 + barWidth / 2}\n              textAnchor=\"end\"\n              y={h > 15 ? y + 15 : y + 7}\n              {...this.getPropsForLabels()}\n            >\n              {x[z]}\n            </Text>\n          );\n        }\n\n        st -= h;\n      }\n\n      return ret;\n    });\n\n  renderLegend = ({\n    legend,\n    colors,\n    width,\n    height\n  }: Pick<AbstractChartConfig, \"width\" | \"height\"> & {\n    legend: string[];\n    colors: string[];\n  }) =>\n    legend.map((x, i) => {\n      return (\n        <G key={Math.random()}>\n          <Rect\n            width=\"16px\"\n            height=\"16px\"\n            fill={colors[i]}\n            rx={8}\n            ry={8}\n            x={width * 0.71}\n            y={height * 0.7 - i * 50}\n          />\n          <Text\n            x={width * 0.78}\n            y={height * 0.76 - i * 50}\n            {...this.getPropsForLabels()}\n          >\n            {x}\n          </Text>\n        </G>\n      );\n    });\n\n  render() {\n    const paddingTop = 15;\n    const paddingRight = 50;\n    const barWidth = 32 * this.getBarPercentage();\n\n    const {\n      width,\n      height,\n      style = {},\n      data,\n      withHorizontalLabels = true,\n      withVerticalLabels = true,\n      segments = 4,\n      decimalPlaces,\n      percentile = false,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE,\n      formatYLabel = (yLabel: string) => {\n        return yLabel;\n      },\n      hideLegend = false\n    } = this.props;\n\n    const { borderRadius = 0 } = style;\n    const config = {\n      width,\n      height\n    };\n\n    let border = 0;\n\n    let max = 0;\n    for (let i = 0; i < data.data.length; i++) {\n      const actual = data.data[i].reduce((pv, cv) => pv + cv, 0);\n      if (actual > max) {\n        max = actual;\n      }\n    }\n\n    if (percentile) {\n      border = 100;\n    } else {\n      border = max;\n    }\n\n    const showLegend = !hideLegend && data.legend && data.legend.length != 0;\n    const stackedBar = showLegend;\n\n    return (\n      <View style={style}>\n        <Svg height={height} width={width}>\n          {this.renderDefs({\n            ...config,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G>\n            {this.renderHorizontalLines({\n              ...config,\n              count: segments,\n              paddingTop,\n              verticalLabelsHeightPercentage\n            })}\n          </G>\n          <G>\n            {withHorizontalLabels\n              ? this.renderHorizontalLabels({\n                  ...config,\n                  count: segments,\n                  data: [0, border],\n                  paddingTop,\n                  paddingRight,\n                  decimalPlaces,\n                  verticalLabelsHeightPercentage,\n                  formatYLabel\n                })\n              : null}\n          </G>\n          <G>\n            {withVerticalLabels\n              ? this.renderVerticalLabels({\n                  ...config,\n                  labels: data.labels,\n                  paddingRight: paddingRight + 28,\n                  stackedBar,\n                  paddingTop,\n                  horizontalOffset: barWidth,\n                  verticalLabelsHeightPercentage\n                })\n              : null}\n          </G>\n          <G>\n            {this.renderBars({\n              ...config,\n              data: data.data,\n              border,\n              colors: this.props.data.barColors,\n              paddingTop,\n              paddingRight: paddingRight + 20,\n              stackedBar,\n              verticalLabelsHeightPercentage\n            })}\n          </G>\n          {showLegend &&\n            this.renderLegend({\n              ...config,\n              legend: data.legend,\n              colors: this.props.data.barColors\n            })}\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default StackedBarChart;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}