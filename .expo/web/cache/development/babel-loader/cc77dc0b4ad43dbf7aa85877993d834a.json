{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { useFonts } from 'expo-font';\nimport { Righteous_400Regular } from '@expo-google-fonts/righteous';\nimport { colors0, colors1 } from \"./ComponentStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    height: 48,\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    backgroundColor: colors0.bluel,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  title: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    fontSize: 24,\n    fontFamily: 'Righteous_400Regular'\n  }\n});\n\nvar AboutButton = function AboutButton(_ref) {\n  var onPress = _ref.onPress;\n  return _jsx(Icon.Button, {\n    name: \"info\",\n    backgroundColor: colors1.blued,\n    iconStyle: {\n      marginLeft: 5,\n      marginRight: 5\n    },\n    borderRadius: 20,\n    size: 15,\n    onPress: onPress\n  });\n};\n\nvar TopBar = function TopBar() {\n  var _useFonts = useFonts({\n    Righteous_400Regular: Righteous_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  if (!fontsLoaded) return null;else return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Icon, {\n      name: \"thermometer\",\n      color: colors1.icej,\n      size: 26\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"WebEnv\"\n    }), _jsx(AboutButton, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      }\n    })]\n  });\n};\n\nexport default TopBar;","map":{"version":3,"sources":["/home/syed/Code/envmon-web/WebEnv/components/TopBar.js"],"names":["useState","Icon","useFonts","Righteous_400Regular","colors0","colors1","styles","StyleSheet","create","container","height","alignSelf","flexDirection","backgroundColor","bluel","alignItems","justifyContent","paddingLeft","paddingRight","title","flex","color","fontSize","fontFamily","AboutButton","onPress","blued","marginLeft","marginRight","TopBar","fontsLoaded","visible","setModalVisible","icej"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;AAEA,OAAOC,IAAP;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,SAASC,OAAT,EAAkBC,OAAlB;;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,SAAS,EAAE,SAFF;AAGTC,IAAAA,aAAa,EAAE,KAHN;AAITC,IAAAA,eAAe,EAAET,OAAO,CAACU,KAJhB;AAKTC,IAAAA,UAAU,EAAE,QALH;AAMTC,IAAAA,cAAc,EAAE,eANP;AAOTC,IAAAA,WAAW,EAAE,EAPJ;AAQTC,IAAAA,YAAY,EAAE;AARL,GADoB;AAW/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,KAAK,EAAE,OAFF;AAGLJ,IAAAA,WAAW,EAAE,EAHR;AAILK,IAAAA,QAAQ,EAAE,EAJL;AAKLC,IAAAA,UAAU,EAAE;AALP;AAXwB,CAAlB,CAAf;;AAoBA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SAClB,KAAC,IAAD,CAAM,MAAN;AAAa,IAAA,IAAI,EAAC,MAAlB;AACE,IAAA,eAAe,EAAEpB,OAAO,CAACqB,KAD3B;AAEE,IAAA,SAAS,EAAE;AAAEC,MAAAA,UAAU,EAAE,CAAd;AAAiBC,MAAAA,WAAW,EAAE;AAA9B,KAFb;AAGE,IAAA,YAAY,EAAE,EAHhB;AAIE,IAAA,IAAI,EAAE,EAJR;AAKE,IAAA,OAAO,EAAEH;AALX,IADkB;AAAA,CAApB;;AASA,IAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,kBAAoB3B,QAAQ,CAAC;AAAEC,IAAAA,oBAAoB,EAApBA;AAAF,GAAD,CAA5B;AAAA;AAAA,MAAK2B,WAAL;;AACA,kBAAmC9B,QAAQ,CAAC,KAAD,CAA3C;AAAA;AAAA,MAAO+B,OAAP;AAAA,MAAgBC,eAAhB;;AACA,MAAI,CAACF,WAAL,EAAkB,OAAO,IAAP,CAAlB,KAEE,OACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACG,SAApB;AAAA,eACE,KAAC,IAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,KAAK,EAAEJ,OAAO,CAAC4B,IAFjB;AAGE,MAAA,IAAI,EAAE;AAHR,MADF,EAME,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE3B,MAAM,CAACa,KAApB;AAAA;AAAA,MANF,EAOE,KAAC,WAAD;AAAa,MAAA,OAAO,EAAE;AAAA,eAAMa,eAAe,CAAC,IAAD,CAArB;AAAA;AAAtB,MAPF;AAAA,IADF;AAWH,CAhBD;;AAkBA,eAAeH,MAAf","sourcesContent":["import { useState } from 'react';\nimport { View, Text, Image, StyleSheet } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { useFonts } from 'expo-font';\nimport { Righteous_400Regular } from '@expo-google-fonts/righteous';\nimport { colors0, colors1 } from './ComponentStyles';\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 48,\n    alignSelf: 'stretch',\n    flexDirection: 'row', // row\n    backgroundColor: colors0.bluel,\n    alignItems: 'center',\n    justifyContent: 'space-between', // center, space-around\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  title: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    fontSize: 24,\n    fontFamily: 'Righteous_400Regular'\n  }\n});\n\nconst AboutButton = ({ onPress }) =>\n  <Icon.Button name=\"info\"\n    backgroundColor={colors1.blued}\n    iconStyle={{ marginLeft: 5, marginRight: 5 }}\n    borderRadius={20}\n    size={15}\n    onPress={onPress}\n  />;\n\nconst TopBar = () => {\n  let [fontsLoaded] = useFonts({ Righteous_400Regular });\n  const [visible, setModalVisible] = useState(false);\n  if (!fontsLoaded) return null;\n  else\n    return (\n      <View style={styles.container}>\n        <Icon\n          name=\"thermometer\"\n          color={colors1.icej}\n          size={26}\n        />\n        <Text style={styles.title}>WebEnv</Text>\n        <AboutButton onPress={() => setModalVisible(true)} />\n      </View>\n    );\n};\n\nexport default TopBar;"]},"metadata":{},"sourceType":"module"}