{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TopBar from \"./components/TopBar\";\nimport AboutModal from \"./components/AboutModal\";\nimport Cards from \"./components/Cards\";\nimport Loading from \"./components/Loading\";\nimport { colors0, colors1 } from \"./components/ComponentStyles\";\nimport utils from \"./services/WEUtils\";\nimport envmon from \"./services/envmon\";\nimport bgImage from \"./assets/background.jpg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'stretch'\n  },\n  webWrapper: {\n    flex: 1,\n    height: 720,\n    width: 480,\n    alignSelf: 'center'\n  },\n  bgImage: {\n    flex: 1\n  }\n});\n\nvar ShowCards = function ShowCards(_ref) {\n  var env = _ref.env;\n\n  if (env.length === 0 || env === undefined) {\n    return _jsx(Loading, {});\n  } else {\n    var t = env[0].envdata.temp;\n    var h = env[0].envdata.humidity;\n    return _jsx(Cards, {\n      temperature: t.toFixed(1),\n      humidity: 61\n    });\n  }\n};\n\nvar WebEnv = function WebEnv() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      env = _useState4[0],\n      setEnv = _useState4[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      envmon.getAll('http://envmon.local/').then(function (data) {\n        return setEnv(data);\n      });\n    }, 2000);\n  }, [env]);\n  return _jsx(ImageBackground, {\n    source: bgImage,\n    style: style.bgImage,\n    children: _jsxs(View, {\n      style: style.container,\n      children: [_jsx(StatusBar, {\n        animated: true,\n        backgroundColor: colors0.blued,\n        hidden: false\n      }), _jsx(TopBar, {\n        aboutButton: function aboutButton() {\n          return setModalVisible(true);\n        }\n      }), _jsx(AboutModal, {\n        visible: visible,\n        setModalVisible: setModalVisible\n      }), _jsx(ShowCards, {\n        env: env\n      })]\n    })\n  });\n};\n\nvar App = function App() {\n  if (utils.isWeb()) {\n    return _jsx(ImageBackground, {\n      source: bgImage,\n      style: style.bgImage,\n      blurRadius: 10,\n      children: _jsx(View, {\n        style: style.webWrapper,\n        children: _jsx(WebEnv, {})\n      })\n    });\n  } else {\n    return _jsx(WebEnv, {});\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/home/syed/Code/envmon-web/WebEnv/App.js"],"names":["useState","useEffect","TopBar","AboutModal","Cards","Loading","colors0","colors1","utils","envmon","bgImage","style","StyleSheet","create","container","flex","alignItems","webWrapper","height","width","alignSelf","ShowCards","env","length","undefined","t","envdata","temp","h","humidity","toFixed","WebEnv","visible","setModalVisible","setEnv","setTimeout","getAll","then","data","blued","App","isWeb"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { View, StatusBar, ImageBackground } from 'react-native';\nimport { StyleSheet } from 'react-native';\n\nimport TopBar from './components/TopBar';\nimport AboutModal from './components/AboutModal';\nimport Cards from './components/Cards';\nimport Loading from './components/Loading';\nimport { colors0, colors1 } from './components/ComponentStyles';\n\nimport utils from './services/WEUtils';\nimport envmon from './services/envmon';\n\nimport bgImage from './assets/background.jpg';\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n    //backgroundColor: colors1.verdigris,\n    alignItems: 'stretch',\n    //display: 'block'\n  },\n  webWrapper: {\n    flex: 1,\n    height: 720,\n    width: 480,\n    alignSelf: 'center'\n  },\n  bgImage: {\n    flex: 1\n  }\n});\n\nconst ShowCards = ({ env }) => {\n  if (env.length === 0 || env === undefined) {\n    return (\n      <Loading />\n    );\n  } else {\n    const t = env[0].envdata.temp;\n    const h = env[0].envdata.humidity;\n    return (\n      <Cards temperature={t.toFixed(1)} humidity={61} />\n    );\n  }\n}\n\nconst WebEnv = () => {\n  const [visible, setModalVisible] = useState(false);\n  const [env, setEnv] = useState([]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      envmon\n        .getAll('http://envmon.local/')\n        .then(data => setEnv(data));\n    }, 2000);\n  }, [env]);\n\n  return (\n    <ImageBackground source={bgImage}\n      style={style.bgImage}>\n      <View style={style.container}>\n        <StatusBar\n          animated={true}\n          backgroundColor={colors0.blued}\n          hidden={false} />\n        <TopBar aboutButton={() => setModalVisible(true)} />\n        <AboutModal visible={visible} setModalVisible={setModalVisible} />\n        <ShowCards env={env} />\n      </View>\n    </ImageBackground>\n  );\n};\n\nconst App = () => {\n  if (utils.isWeb()) {\n    return (\n      <ImageBackground source={bgImage}\n        style={style.bgImage}\n        blurRadius={10}>\n        <View style={style.webWrapper}>\n          <WebEnv />\n        </View>\n      </ImageBackground >\n    );\n  } else {\n    return (<WebEnv />);\n  }\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}