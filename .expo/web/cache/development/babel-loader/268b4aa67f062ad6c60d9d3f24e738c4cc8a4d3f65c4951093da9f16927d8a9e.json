{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TopBar from \"./components/TopBar\";\nimport AboutModal from \"./components/AboutModal\";\nimport Cards from \"./components/Cards\";\nimport CircularLoading from \"./components/CircularLoading\";\nimport ConnectText from \"./components/ConnectText\";\nimport EnvChart from \"./components/EnvChart\";\nimport ChartToggle from \"./components/ChartToggle\";\nimport URLField from \"./components/URLBar\";\nimport { colors0, componentStyles } from \"./components/ComponentStyles\";\nimport utils from \"./services/WEUtils\";\nimport envmon from \"./services/envmon\";\nimport bgImage from \"./assets/background.jpg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ShowCards = function ShowCards(_ref) {\n  var env = _ref.env;\n  if (env === undefined || env.length === 0) {\n    return _jsx(CircularLoading, {});\n  } else {\n    return _jsx(Cards, {\n      temperature: env[0].envdata.temp,\n      humidity: env[0].envdata.humidity\n    });\n  }\n};\nvar WebEnv = function WebEnv() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chartType = _useState4[0],\n    setChartType = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    env = _useState6[0],\n    setEnv = _useState6[1];\n  var _useState7 = useState({\n      labels: [-1],\n      data: [0.0]\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    chartData = _useState8[0],\n    setChartData = _useState8[1];\n  var _useState9 = useState('http://envmon.local:8888/'),\n    _useState10 = _slicedToArray(_useState9, 2),\n    URL = _useState10[0],\n    setURL = _useState10[1];\n  useEffect(function () {\n    utils.init(setURL);\n  }, []);\n  useEffect(function () {\n    setTimeout(function () {\n      envmon.getAll(URL).then(function (data) {\n        return setEnv(data);\n      });\n    }, 2000);\n  }, [env]);\n  useEffect(function () {\n    setEnv([]);\n  }, [URL]);\n  useEffect(function () {\n    if (env !== undefined && env.length !== 0 && !(isNaN(env[0].envdata.temp) || isNaN(env[0].envdata.humidity))) {\n      var newChart = chartData.labels[0] === -1 ? {\n        labels: [],\n        data: []\n      } : _objectSpread({}, chartData);\n      if (chartData.data.length >= 5) {\n        newChart.data.shift();\n        newChart.labels.shift();\n      }\n      newChart.data.push(Number(chartType === 0 ? env[0].envdata.temp : env[0].envdata.humidity));\n      newChart.labels.push(env[0].uptime.hours + ':' + env[0].uptime.minutes + ':' + env[0].uptime.seconds);\n      setChartData(newChart);\n    }\n  }, [env]);\n  useEffect(function () {\n    var blankChart = {\n      labels: [],\n      data: []\n    };\n    setChartData(blankChart);\n  }, [chartType]);\n  return _jsx(ImageBackground, {\n    source: bgImage,\n    style: componentStyles.bgImage,\n    children: _jsxs(View, {\n      style: componentStyles.appContainer,\n      children: [_jsx(StatusBar, {\n        animated: true,\n        backgroundColor: colors0.blued,\n        hidden: false\n      }), _jsx(TopBar, {\n        aboutButton: function aboutButton() {\n          return setModalVisible(true);\n        }\n      }), _jsx(ShowCards, {\n        env: env\n      }), _jsx(EnvChart, {\n        chartData: chartData,\n        chartType: chartType\n      }), _jsx(ChartToggle, {\n        chartType: chartType,\n        setChartType: setChartType\n      }), _jsx(URLField, {\n        URL: URL,\n        setURL: setURL\n      }), _jsx(AboutModal, {\n        visible: visible,\n        setModalVisible: setModalVisible,\n        envBackend: env[0] !== undefined ? env[0].backend : {\n          name: 'unknown',\n          version: 'unknown'\n        }\n      }), _jsx(ConnectText, {\n        env: env\n      })]\n    })\n  });\n};\nvar App = function App() {\n  if (utils.isWeb() && !utils.isPortrait()) {\n    return _jsx(ImageBackground, {\n      source: bgImage,\n      style: componentStyles.bgImage,\n      blurRadius: 10,\n      children: _jsx(View, {\n        style: componentStyles.webWrapper,\n        children: _jsx(WebEnv, {})\n      })\n    });\n  } else {\n    return _jsx(WebEnv, {});\n  }\n};\nexport default App;","map":{"version":3,"names":["useState","useEffect","TopBar","AboutModal","Cards","CircularLoading","ConnectText","EnvChart","ChartToggle","URLField","colors0","componentStyles","utils","envmon","bgImage","ShowCards","env","undefined","length","envdata","temp","humidity","WebEnv","visible","setModalVisible","chartType","setChartType","setEnv","labels","data","chartData","setChartData","URL","setURL","init","setTimeout","getAll","then","isNaN","newChart","shift","push","Number","uptime","hours","minutes","seconds","blankChart","appContainer","blued","backend","name","version","App","isWeb","isPortrait","webWrapper"],"sources":["/home/syed-f/Code/envmon-web/WebEnv/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { View, StatusBar, ImageBackground } from 'react-native';\n\nimport TopBar from './components/TopBar';\nimport AboutModal from './components/AboutModal';\nimport Cards from './components/Cards';\nimport CircularLoading from './components/CircularLoading';\nimport ConnectText from './components/ConnectText';\nimport EnvChart from './components/EnvChart';\nimport ChartToggle from './components/ChartToggle';\nimport URLField from './components/URLBar';\nimport { colors0, componentStyles } from './components/ComponentStyles';\n\nimport utils from './services/WEUtils';\nimport envmon from './services/envmon';\n\nimport bgImage from './assets/background.jpg';\n\nconst ShowCards = ({ env }) => {\n  if (env === undefined || env.length === 0) {\n    return (\n      <CircularLoading />\n    );\n  } else {\n    return (\n      <Cards temperature={env[0].envdata.temp}\n        humidity={env[0].envdata.humidity} />\n    );\n  }\n}\n\nconst WebEnv = () => {\n  const [visible, setModalVisible] = useState(false);\n  const [chartType, setChartType] = useState(0);\n  const [env, setEnv] = useState([]);\n  const [chartData, setChartData] = useState({ labels: [-1], data: [0.0] });\n  const [URL, setURL] = useState('http://envmon.local:8888/');\n\n  useEffect(() => { utils.init(setURL) }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      envmon\n        .getAll(URL)\n        .then(data => setEnv(data));\n    }, 2000);\n  }, [env]);\n\n  useEffect(() => {\n    setEnv([]);\n  }, [URL]);\n\n  useEffect(() => {\n    if (env !== undefined && env.length !== 0\n      && !(isNaN(env[0].envdata.temp) || isNaN(env[0].envdata.humidity))) {\n      let newChart = chartData.labels[0] === -1 ? { labels: [], data: [] } : { ...chartData };\n      if (chartData.data.length >= 5) {\n        newChart.data.shift();\n        newChart.labels.shift();\n      }\n      newChart.data.push(Number(chartType === 0 ? env[0].envdata.temp : env[0].envdata.humidity));\n      newChart.labels.push(\n        env[0].uptime.hours + ':' + env[0].uptime.minutes + ':' + env[0].uptime.seconds);\n      setChartData(newChart);\n    }\n  }, [env]);\n\n  useEffect(() => {\n    const blankChart = { labels: [], data: [] };\n    setChartData(blankChart);\n  }, [chartType]);\n\n  return (\n    <ImageBackground source={bgImage}\n      style={componentStyles.bgImage}>\n      <View style={componentStyles.appContainer}>\n        <StatusBar\n          animated={true}\n          backgroundColor={colors0.blued}\n          hidden={false} />\n        <TopBar aboutButton={() => setModalVisible(true)} />\n        <ShowCards env={env} />\n        <EnvChart chartData={chartData} chartType={chartType} />\n        <ChartToggle chartType={chartType} setChartType={setChartType} />\n        <URLField URL={URL} setURL={setURL} />\n        <AboutModal visible={visible} setModalVisible={setModalVisible}\n          envBackend={env[0] !== undefined ? env[0].backend : { name: 'unknown', version: 'unknown' }} />\n        <ConnectText env={env} />\n      </View>\n    </ImageBackground>\n  );\n};\n\nconst App = () => {\n  if (utils.isWeb() && !utils.isPortrait()) {\n    return (\n      <ImageBackground source={bgImage}\n        style={componentStyles.bgImage}\n        blurRadius={10}>\n        <View style={componentStyles.webWrapper}>\n          <WebEnv />\n        </View>\n      </ImageBackground >\n    );\n  } else {\n    return (<WebEnv />);\n  }\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}