{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { colors0, colors1 } from \"./ComponentStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  URLArea: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 6,\n    height: 40,\n    marginVertical: 5\n  },\n  URLInput: {\n    flex: 4,\n    height: 40,\n    padding: 5,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: colors1.icej,\n    backgroundColor: 'white',\n    fontSize: 20,\n    fontFamily: 'monospace'\n  },\n  button: {\n    flex: 1,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    backgroundColor: colors1.verdigris\n  },\n  active: {\n    backgroundColor: colors0.purplec\n  }\n});\nvar URLField = function URLField(_ref) {\n  var URL = _ref.URL,\n    setURL = _ref.setURL;\n  var _useState = useState(URL),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n  if (text !== URL) setText(URL);\n  return _jsxs(View, {\n    style: styles.URLArea,\n    children: [_jsx(TextInput, {\n      onChange: function onChange(e) {\n        return setText(e.target.value);\n      },\n      value: text,\n      style: styles.URLInput,\n      onSubmitEditing: function onSubmitEditing() {\n        return setURL(text);\n      },\n      editable: false\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        return setURL(text);\n      },\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.button, pressed ? styles.active : null];\n      },\n      children: _jsx(Icon, {\n        name: \"check\",\n        color: \"white\",\n        iconStyle: {\n          marginRight: 5,\n          marginLeft: 5\n        },\n        size: 26\n      })\n    })]\n  });\n};\nexport default URLField;","map":{"version":3,"names":["useState","Icon","colors0","colors1","styles","StyleSheet","create","URLArea","flex","flexDirection","padding","height","marginVertical","URLInput","borderRadius","borderWidth","borderColor","icej","backgroundColor","fontSize","fontFamily","button","alignItems","justifyContent","verdigris","active","purplec","URLField","URL","setURL","text","setText","e","target","value","pressed","marginRight","marginLeft"],"sources":["/home/syed-f/Code/envmon-web/WebEnv/components/URLBar.js"],"sourcesContent":["import { useState } from 'react';\nimport { View, TextInput, Pressable } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { colors0, colors1 } from './ComponentStyles';\n\nconst styles = StyleSheet.create({\n  URLArea: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 6,\n    height: 40,\n    marginVertical: 5\n  },\n  URLInput: {\n    flex: 4,\n    height: 40,\n    padding: 5,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: colors1.icej,\n    backgroundColor: 'white',\n    fontSize: 20,\n    fontFamily: 'monospace'\n  },\n  button: {\n    flex: 1,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    backgroundColor: colors1.verdigris\n  },\n  active: {\n    backgroundColor: colors0.purplec\n  }\n});\n\nconst URLField = ({ URL, setURL }) => {\n  const [text, setText] = useState(URL);\n  if (text !== URL)\n    setText(URL);\n  return (\n    <View style={styles.URLArea}>\n      <TextInput onChange={(e) => setText(e.target.value)}\n        value={text}\n        style={styles.URLInput}\n        onSubmitEditing={() => setURL(text)}\n        editable={false}\n      />\n      <Pressable onPress={() => setURL(text)}\n        style={({ pressed }) => [\n          styles.button,\n          pressed ? styles.active : null]}\n      >\n        <Icon\n          name=\"check\"\n          color=\"white\"\n          iconStyle={{ marginRight: 5, marginLeft: 5 }}\n          size={26}\n        />\n      </Pressable>\n    </View>);\n};\n\nexport default URLField;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAGjC,OAAOC,IAAI;AACX,SAASC,OAAO,EAAEC,OAAO;AAA4B;AAAA;AAErD,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,OAAO,EAAE;IACPC,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE,CAAC;IACVC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACRL,IAAI,EAAE,CAAC;IACPG,MAAM,EAAE,EAAE;IACVD,OAAO,EAAE,CAAC;IACVI,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAEb,OAAO,CAACc,IAAI;IACzBC,eAAe,EAAE,OAAO;IACxBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDC,MAAM,EAAE;IACNb,IAAI,EAAE,CAAC;IACPG,MAAM,EAAE,EAAE;IACVW,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBT,YAAY,EAAE,CAAC;IACfI,eAAe,EAAEf,OAAO,CAACqB;EAC3B,CAAC;EACDC,MAAM,EAAE;IACNP,eAAe,EAAEhB,OAAO,CAACwB;EAC3B;AACF,CAAC,CAAC;AAEF,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,OAAwB;EAAA,IAAlBC,GAAG,QAAHA,GAAG;IAAEC,MAAM,QAANA,MAAM;EAC7B,gBAAwB7B,QAAQ,CAAC4B,GAAG,CAAC;IAAA;IAA9BE,IAAI;IAAEC,OAAO;EACpB,IAAID,IAAI,KAAKF,GAAG,EACdG,OAAO,CAACH,GAAG,CAAC;EACd,OACE,MAAC,IAAI;IAAC,KAAK,EAAExB,MAAM,CAACG,OAAQ;IAAA,WAC1B,KAAC,SAAS;MAAC,QAAQ,EAAE,kBAACyB,CAAC;QAAA,OAAKD,OAAO,CAACC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MAAA,CAAC;MAClD,KAAK,EAAEJ,IAAK;MACZ,KAAK,EAAE1B,MAAM,CAACS,QAAS;MACvB,eAAe,EAAE;QAAA,OAAMgB,MAAM,CAACC,IAAI,CAAC;MAAA,CAAC;MACpC,QAAQ,EAAE;IAAM,EAChB,EACF,KAAC,SAAS;MAAC,OAAO,EAAE;QAAA,OAAMD,MAAM,CAACC,IAAI,CAAC;MAAA,CAAC;MACrC,KAAK,EAAE;QAAA,IAAGK,OAAO,SAAPA,OAAO;QAAA,OAAO,CACtB/B,MAAM,CAACiB,MAAM,EACbc,OAAO,GAAG/B,MAAM,CAACqB,MAAM,GAAG,IAAI,CAAC;MAAA,CAAC;MAAA,UAElC,KAAC,IAAI;QACH,IAAI,EAAC,OAAO;QACZ,KAAK,EAAC,OAAO;QACb,SAAS,EAAE;UAAEW,WAAW,EAAE,CAAC;UAAEC,UAAU,EAAE;QAAE,CAAE;QAC7C,IAAI,EAAE;MAAG;IACT,EACQ;EAAA,EACP;AACX,CAAC;AAED,eAAeV,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}