{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { colors0, colors1 } from \"./ComponentStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 10,\n    justifyContent: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  button: {\n    margin: 2,\n    padding: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5\n  },\n  nonPressed: {\n    backgroundColor: colors1.verdigris\n  },\n  pressed: {\n    backgroundColor: colors1.icej\n  }\n});\n\nvar ChartToggle = function ChartToggle(_ref) {\n  var chartType = _ref.chartType,\n      setChartType = _ref.setChartType;\n\n  var handleToggle = function handleToggle() {\n    setChartType(chartType ^ 1);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Pressable, {\n      onPress: handleToggle,\n      disabled: chartType === 0,\n      style: [styles.button, chartType === 0 ? styles.pressed : styles.nonPressed],\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Temperature\"\n      })\n    }), _jsx(Pressable, {\n      onPress: handleToggle,\n      disabled: chartType !== 0,\n      style: [styles.button, chartType !== 0 ? styles.pressed : styles.nonPressed],\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Humidity\"\n      })\n    })]\n  });\n};\n\nexport default ChartToggle;","map":{"version":3,"sources":["/home/syed/Code/envmon-web/WebEnv/components/ChartToggle.js"],"names":["colors0","colors1","styles","StyleSheet","create","container","flex","flexDirection","padding","justifyContent","buttonText","color","fontSize","fontWeight","textAlign","button","margin","alignItems","borderRadius","nonPressed","backgroundColor","verdigris","pressed","icej","ChartToggle","chartType","setChartType","handleToggle"],"mappings":";;;;AAEA,SAASA,OAAT,EAAkBC,OAAlB;;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,OAAO,EAAE,EAHA;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,UAAU,EAAE,MAHF;AAIVC,IAAAA,SAAS,EAAE;AAJD,GAPmB;AAa/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,CADF;AAENR,IAAAA,OAAO,EAAE,CAFH;AAGNS,IAAAA,UAAU,EAAE,QAHN;AAINR,IAAAA,cAAc,EAAE,QAJV;AAKNS,IAAAA,YAAY,EAAE;AALR,GAbuB;AAoB/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAEnB,OAAO,CAACoB;AADf,GApBmB;AAuB/BC,EAAAA,OAAO,EAAE;AACPF,IAAAA,eAAe,EAAEnB,OAAO,CAACsB;AADlB;AAvBsB,CAAlB,CAAf;;AA4BA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAiC;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AACnD,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACD,GAFD;;AAGA,SAAO,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACG,SAApB;AAAA,eACL,KAAC,SAAD;AAAW,MAAA,OAAO,EAAEsB,YAApB;AAAkC,MAAA,QAAQ,EAAEF,SAAS,KAAK,CAA1D;AACE,MAAA,KAAK,EAAE,CAACvB,MAAM,CAACa,MAAR,EAAgBU,SAAS,KAAK,CAAd,GAAkBvB,MAAM,CAACoB,OAAzB,GAAmCpB,MAAM,CAACiB,UAA1D,CADT;AAAA,gBAEE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACQ,UAApB;AAAA;AAAA;AAFF,MADK,EAKL,KAAC,SAAD;AAAW,MAAA,OAAO,EAAEiB,YAApB;AAAkC,MAAA,QAAQ,EAAEF,SAAS,KAAK,CAA1D;AACE,MAAA,KAAK,EAAE,CAACvB,MAAM,CAACa,MAAR,EAAgBU,SAAS,KAAK,CAAd,GAAkBvB,MAAM,CAACoB,OAAzB,GAAmCpB,MAAM,CAACiB,UAA1D,CADT;AAAA,gBAEE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACQ,UAApB;AAAA;AAAA;AAFF,MALK;AAAA,IAAP;AAUD,CAdD;;AAgBA,eAAec,WAAf","sourcesContent":["import { View, Pressable, Text } from \"react-native\";\nimport { StyleSheet } from \"react-native\";\nimport { colors0, colors1 } from './ComponentStyles';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 10,\n    justifyContent: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  button: {\n    margin: 2,\n    padding: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5,\n  },\n  nonPressed: {\n    backgroundColor: colors1.verdigris\n  },\n  pressed: {\n    backgroundColor: colors1.icej\n  }\n});\n\nconst ChartToggle = ({ chartType, setChartType }) => {\n  const handleToggle = () => {\n    setChartType(chartType ^ 1);\n  }\n  return <View style={styles.container}>\n    <Pressable onPress={handleToggle} disabled={chartType === 0}\n      style={[styles.button, chartType === 0 ? styles.pressed : styles.nonPressed]}>\n      <Text style={styles.buttonText}>Temperature</Text>\n    </Pressable>\n    <Pressable onPress={handleToggle} disabled={chartType !== 0}\n      style={[styles.button, chartType !== 0 ? styles.pressed : styles.nonPressed]} >\n      <Text style={styles.buttonText}>Humidity</Text>\n    </Pressable>\n  </View >;\n};\n\nexport default ChartToggle;"]},"metadata":{},"sourceType":"module"}