{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nvar Cat = function Cat(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isHungry = _useState2[0],\n      setIsHungry = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles,\n    children: [_jsxs(Text, {\n      children: [\"I am \", props.name, \", and I am \", isHungry ? \"hungry\" : \"full\", \"!\"]\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        setIsHungry(false);\n      },\n      disabled: !isHungry,\n      title: isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"\n    })]\n  });\n};\n\nvar Cafe = function Cafe() {\n  return _jsxs(View, {\n    style: styles,\n    children: [_jsx(Cat, {\n      name: \"Munkustrap\"\n    }), _jsx(Cat, {\n      name: \"Spot\"\n    })]\n  });\n};\n\nexport default Cafe;","map":{"version":3,"sources":["/home/syed/Code/envmon-web/WebEnv/App.js"],"names":["React","useState","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","Cat","props","isHungry","setIsHungry","name","Cafe"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAIA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf;;AASA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,kBAAgCV,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAb;AAAA,eACE,MAAC,IAAD;AAAA,0BACQS,KAAK,CAACG,IADd,iBAC+BF,QAAQ,GAAG,QAAH,GAAc,MADrD;AAAA,MADF,EAIE,KAAC,MAAD;AACE,MAAA,OAAO,EAAE,mBAAM;AACbC,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD,OAHH;AAIE,MAAA,QAAQ,EAAE,CAACD,QAJb;AAKE,MAAA,KAAK,EAAEA,QAAQ,GAAG,4BAAH,GAAkC;AALnD,MAJF;AAAA,IADF;AAcD,CAjBD;;AAmBA,IAAMG,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAb;AAAA,eACE,KAAC,GAAD;AAAK,MAAA,IAAI,EAAC;AAAV,MADF,EAEE,KAAC,GAAD;AAAK,MAAA,IAAI,EAAC;AAAV,MAFF;AAAA,IADF;AAMD,CAPD;;AASA,eAAea,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Text, View } from \"react-native\";\nimport { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst Cat = (props) => {\n  const [isHungry, setIsHungry] = useState(true);\n\n  return (\n    <View style={styles}>\n      <Text>\n        I am {props.name}, and I am {isHungry ? \"hungry\" : \"full\"}!\n      </Text>\n      <Button\n        onPress={() => {\n          setIsHungry(false);\n        }}\n        disabled={!isHungry}\n        title={isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"}\n      />\n    </View>\n  );\n}\n\nconst Cafe = () => {\n  return (\n    <View style={styles}>\n      <Cat name=\"Munkustrap\" />\n      <Cat name=\"Spot\" />\n    </View>\n  );\n}\n\nexport default Cafe;"]},"metadata":{},"sourceType":"module"}