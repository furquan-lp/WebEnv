{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { colors0, colors1 } from \"./ComponentStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    padding: 5,\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  button: {\n    flex: 1,\n    margin: 2,\n    padding: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5\n  },\n  nonPressed: {\n    backgroundColor: colors1.verdigris\n  },\n  pressed: {\n    backgroundColor: colors1.icej\n  },\n  active: {\n    backgroundColor: colors0.purplec\n  }\n});\nvar ChartToggle = function ChartToggle(_ref) {\n  var chartType = _ref.chartType,\n    setChartType = _ref.setChartType;\n  var handleToggle = function handleToggle() {\n    setChartType(chartType ^ 1);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Pressable, {\n      onPress: handleToggle,\n      disabled: chartType === 0,\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.button, chartType === 0 ? styles.pressed : styles.nonPressed, pressed ? styles.active : null];\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Temperature\"\n      })\n    }), _jsx(Pressable, {\n      onPress: handleToggle,\n      disabled: chartType !== 0,\n      style: function style(_ref3) {\n        var pressed = _ref3.pressed;\n        return [styles.button, chartType !== 0 ? styles.pressed : styles.nonPressed, pressed ? styles.active : null];\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Humidity\"\n      })\n    })]\n  });\n};\nexport default ChartToggle;","map":{"version":3,"names":["colors0","colors1","styles","StyleSheet","create","container","flexDirection","padding","justifyContent","marginBottom","buttonText","color","fontSize","fontWeight","textAlign","button","flex","margin","alignItems","borderRadius","nonPressed","backgroundColor","verdigris","pressed","icej","active","purplec","ChartToggle","chartType","setChartType","handleToggle"],"sources":["/home/syed-f/Code/envmon-web/WebEnv/components/ChartToggle.js"],"sourcesContent":["import { View, Pressable, Text } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport { colors0, colors1 } from './ComponentStyles';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    padding: 5,\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  button: {\n    flex: 1,\n    margin: 2,\n    padding: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5,\n  },\n  nonPressed: {\n    backgroundColor: colors1.verdigris\n  },\n  pressed: {\n    backgroundColor: colors1.icej\n  },\n  active: {\n    backgroundColor: colors0.purplec\n  }\n});\n\nconst ChartToggle = ({ chartType, setChartType }) => {\n  const handleToggle = () => {\n    setChartType(chartType ^ 1);\n  }\n  return <View style={styles.container}>\n    <Pressable onPress={handleToggle} disabled={chartType === 0}\n      style={({ pressed }) => [\n        styles.button, chartType === 0 ? styles.pressed : styles.nonPressed,\n        pressed ? styles.active : null]}>\n      <Text style={styles.buttonText}>Temperature</Text>\n    </Pressable>\n    <Pressable onPress={handleToggle} disabled={chartType !== 0}\n      style={({ pressed }) => [\n        styles.button, chartType !== 0 ? styles.pressed : styles.nonPressed,\n        pressed ? styles.active : null]} >\n      <Text style={styles.buttonText}>Humidity</Text>\n    </Pressable>\n  </View >;\n};\n\nexport default ChartToggle;"],"mappings":";;;;AAEA,SAASA,OAAO,EAAEC,OAAO;AAA4B;AAAA;AAErD,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE,CAAC;IACVC,cAAc,EAAE,QAAQ;IACxBC,YAAY,EAAE;EAChB,CAAC;EACDC,UAAU,EAAE;IACVC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE;EACb,CAAC;EACDC,MAAM,EAAE;IACNC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,CAAC;IACTV,OAAO,EAAE,CAAC;IACVW,UAAU,EAAE,QAAQ;IACpBV,cAAc,EAAE,QAAQ;IACxBW,YAAY,EAAE;EAChB,CAAC;EACDC,UAAU,EAAE;IACVC,eAAe,EAAEpB,OAAO,CAACqB;EAC3B,CAAC;EACDC,OAAO,EAAE;IACPF,eAAe,EAAEpB,OAAO,CAACuB;EAC3B,CAAC;EACDC,MAAM,EAAE;IACNJ,eAAe,EAAErB,OAAO,CAAC0B;EAC3B;AACF,CAAC,CAAC;AAEF,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAoC;EAAA,IAA9BC,SAAS,QAATA,SAAS;IAAEC,YAAY,QAAZA,YAAY;EAC5C,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzBD,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;EAC7B,CAAC;EACD,OAAO,MAAC,IAAI;IAAC,KAAK,EAAE1B,MAAM,CAACG,SAAU;IAAA,WACnC,KAAC,SAAS;MAAC,OAAO,EAAEyB,YAAa;MAAC,QAAQ,EAAEF,SAAS,KAAK,CAAE;MAC1D,KAAK,EAAE;QAAA,IAAGL,OAAO,SAAPA,OAAO;QAAA,OAAO,CACtBrB,MAAM,CAACa,MAAM,EAAEa,SAAS,KAAK,CAAC,GAAG1B,MAAM,CAACqB,OAAO,GAAGrB,MAAM,CAACkB,UAAU,EACnEG,OAAO,GAAGrB,MAAM,CAACuB,MAAM,GAAG,IAAI,CAAC;MAAA,CAAC;MAAA,UAClC,KAAC,IAAI;QAAC,KAAK,EAAEvB,MAAM,CAACQ,UAAW;QAAA,UAAC;MAAW;IAAO,EACxC,EACZ,KAAC,SAAS;MAAC,OAAO,EAAEoB,YAAa;MAAC,QAAQ,EAAEF,SAAS,KAAK,CAAE;MAC1D,KAAK,EAAE;QAAA,IAAGL,OAAO,SAAPA,OAAO;QAAA,OAAO,CACtBrB,MAAM,CAACa,MAAM,EAAEa,SAAS,KAAK,CAAC,GAAG1B,MAAM,CAACqB,OAAO,GAAGrB,MAAM,CAACkB,UAAU,EACnEG,OAAO,GAAGrB,MAAM,CAACuB,MAAM,GAAG,IAAI,CAAC;MAAA,CAAC;MAAA,UAClC,KAAC,IAAI;QAAC,KAAK,EAAEvB,MAAM,CAACQ,UAAW;QAAA,UAAC;MAAQ;IAAO,EACrC;EAAA,EACN;AACV,CAAC;AAED,eAAeiB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}