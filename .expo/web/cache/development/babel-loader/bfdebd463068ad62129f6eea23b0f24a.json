{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { useFonts } from 'expo-font';\nimport { Righteous_400Regular } from '@expo-google-fonts/righteous';\nimport { colors0, colors1 } from \"./ComponentStyles\";\nimport utils from \"../services/WEUtils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    height: 48,\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    backgroundColor: colors0.bluel,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  title: {\n    flex: 1,\n    color: 'white',\n    marginLeft: 15,\n    fontSize: 24,\n    fontFamily: 'Righteous_400Regular'\n  }\n});\n\nvar AboutButton = function AboutButton(_ref) {\n  var onPress = _ref.onPress;\n  return _jsx(Icon.Button, {\n    name: \"info\",\n    backgroundColor: colors1.blued,\n    iconStyle: {\n      marginLeft: 5,\n      marginRight: 5\n    },\n    borderRadius: 20,\n    size: 15,\n    onPress: onPress\n  });\n};\n\nvar TopBar = function TopBar(_ref2) {\n  var aboutButton = _ref2.aboutButton;\n\n  var _useFonts = useFonts({\n    Righteous_400Regular: Righteous_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) return null;else return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Pressable, {\n      onPress: function onPress() {\n        return Linking.openURL;\n      },\n      children: _jsx(Icon, {\n        name: \"thermometer\",\n        color: colors1.icej,\n        size: 26\n      })\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"WebEnv\"\n    }), _jsx(AboutButton, {\n      onPress: aboutButton\n    })]\n  });\n};\n\nexport default TopBar;","map":{"version":3,"sources":["/home/syed/Code/envmon-web/WebEnv/components/TopBar.js"],"names":["Icon","useFonts","Righteous_400Regular","colors0","colors1","utils","styles","StyleSheet","create","container","height","alignSelf","flexDirection","backgroundColor","bluel","alignItems","justifyContent","paddingLeft","paddingRight","title","flex","color","marginLeft","fontSize","fontFamily","AboutButton","onPress","blued","marginRight","TopBar","aboutButton","fontsLoaded","Linking","openURL","icej"],"mappings":";;;;;;AACA,OAAOA,IAAP;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,SAASC,OAAT,EAAkBC,OAAlB;AACA,OAAOC,KAAP;;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,SAAS,EAAE,SAFF;AAGTC,IAAAA,aAAa,EAAE,KAHN;AAITC,IAAAA,eAAe,EAAEV,OAAO,CAACW,KAJhB;AAKTC,IAAAA,UAAU,EAAE,QALH;AAMTC,IAAAA,cAAc,EAAE,eANP;AAOTC,IAAAA,WAAW,EAAE,EAPJ;AAQTC,IAAAA,YAAY,EAAE;AARL,GADoB;AAW/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,KAAK,EAAE,OAFF;AAGLC,IAAAA,UAAU,EAAE,EAHP;AAILC,IAAAA,QAAQ,EAAE,EAJL;AAKLC,IAAAA,UAAU,EAAE;AALP;AAXwB,CAAlB,CAAf;;AAoBA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SAClB,KAAC,IAAD,CAAM,MAAN;AAAa,IAAA,IAAI,EAAC,MAAlB;AACE,IAAA,eAAe,EAAEtB,OAAO,CAACuB,KAD3B;AAEE,IAAA,SAAS,EAAE;AAAEL,MAAAA,UAAU,EAAE,CAAd;AAAiBM,MAAAA,WAAW,EAAE;AAA9B,KAFb;AAGE,IAAA,YAAY,EAAE,EAHhB;AAIE,IAAA,IAAI,EAAE,EAJR;AAKE,IAAA,OAAO,EAAEF;AALX,IADkB;AAAA,CAApB;;AASA,IAAMG,MAAM,GAAG,SAATA,MAAS,QAAqB;AAAA,MAAlBC,WAAkB,SAAlBA,WAAkB;;AAClC,kBAAoB7B,QAAQ,CAAC;AAAEC,IAAAA,oBAAoB,EAApBA;AAAF,GAAD,CAA5B;AAAA;AAAA,MAAK6B,WAAL;;AACA,MAAI,CAACA,WAAL,EAAkB,OAAO,IAAP,CAAlB,KAEE,OACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACG,SAApB;AAAA,eACE,KAAC,SAAD;AAAW,MAAA,OAAO,EAAE;AAAA,eAAMuB,OAAO,CAACC,OAAd;AAAA,OAApB;AAAA,gBACE,KAAC,IAAD;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,KAAK,EAAE7B,OAAO,CAAC8B,IAFjB;AAGE,QAAA,IAAI,EAAE;AAHR;AADF,MADF,EAQE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE5B,MAAM,CAACa,KAApB;AAAA;AAAA,MARF,EASE,KAAC,WAAD;AAAa,MAAA,OAAO,EAAEW;AAAtB,MATF;AAAA,IADF;AAaH,CAjBD;;AAmBA,eAAeD,MAAf","sourcesContent":["import { View, Text, StyleSheet, Linking, Pressable } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { useFonts } from 'expo-font';\nimport { Righteous_400Regular } from '@expo-google-fonts/righteous';\nimport { colors0, colors1 } from './ComponentStyles';\nimport utils from '../services/WEUtils';\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 48,\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    backgroundColor: colors0.bluel,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  title: {\n    flex: 1,\n    color: 'white',\n    marginLeft: 15,\n    fontSize: 24,\n    fontFamily: 'Righteous_400Regular'\n  }\n});\n\nconst AboutButton = ({ onPress }) =>\n  <Icon.Button name=\"info\"\n    backgroundColor={colors1.blued}\n    iconStyle={{ marginLeft: 5, marginRight: 5 }}\n    borderRadius={20}\n    size={15}\n    onPress={onPress}\n  />;\n\nconst TopBar = ({ aboutButton }) => {\n  let [fontsLoaded] = useFonts({ Righteous_400Regular });\n  if (!fontsLoaded) return null;\n  else\n    return (\n      <View style={styles.container}>\n        <Pressable onPress={() => Linking.openURL}>\n          <Icon\n            name=\"thermometer\"\n            color={colors1.icej}\n            size={26}\n          />\n        </Pressable>\n        <Text style={styles.title}>WebEnv</Text>\n        <AboutButton onPress={aboutButton} />\n      </View>\n    );\n};\n\nexport default TopBar;"]},"metadata":{},"sourceType":"module"}