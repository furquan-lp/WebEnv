{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport envmon from \"./envmon\";\nimport { version, homepage, repository } from \"../package.json\";\nvar init = function init(setURL) {\n  envmon.getAll(homepage + \"data/webenv.json\").then(function (webenvData) {\n    appVer = webenvData.record.version;\n    repoURL = webenvData.record.repositoryURL;\n    setURL(webenvData.record.backendURL);\n  });\n};\nvar isWeb = function isWeb() {\n  return Platform.OS === 'web';\n};\nvar isPortrait = function isPortrait() {\n  return Dimensions.get('window').height > Dimensions.get('window').width;\n};\nvar getOS = function getOS() {\n  return Platform.OS;\n};\nvar getAppVersion = function getAppVersion() {\n  return version;\n};\nvar getRepoURL = function getRepoURL() {\n  return repository.url;\n};\nexport default {\n  init: init,\n  isWeb: isWeb,\n  isPortrait: isPortrait,\n  getOS: getOS,\n  getAppVersion: getAppVersion,\n  getRepoURL: getRepoURL\n};","map":{"version":3,"names":["envmon","version","homepage","repository","init","setURL","getAll","then","webenvData","appVer","record","repoURL","repositoryURL","backendURL","isWeb","Platform","OS","isPortrait","Dimensions","get","height","width","getOS","getAppVersion","getRepoURL","url"],"sources":["/home/syed-f/Code/envmon-web/WebEnv/services/WEUtils.js"],"sourcesContent":["import { Platform, Dimensions } from 'react-native';\nimport envmon from './envmon';\n\nimport { version, homepage, repository } from '../package.json';\n\nconst init = (setURL) => {\n  envmon.getAll(`${homepage}data/webenv.json`,).then(webenvData => {\n    appVer = webenvData.record.version;\n    repoURL = webenvData.record.repositoryURL;\n    setURL(webenvData.record.backendURL);\n  });\n}\n\nconst isWeb = () => {\n  return (Platform.OS === 'web');\n};\n\nconst isPortrait = () => {\n  return Dimensions.get('window').height > Dimensions.get('window').width;\n};\n\nconst getOS = () => {\n  return Platform.OS;\n};\n\nconst getAppVersion = () => {\n  return version;\n};\n\nconst getRepoURL = () => {\n  return repository.url;\n}\n\nexport default { init, isWeb, isPortrait, getOS, getAppVersion, getRepoURL };"],"mappings":";;AACA,OAAOA,MAAM;AAEb,SAASC,OAAO,EAAEC,QAAQ,EAAEC,UAAU;AAEtC,IAAMC,IAAI,GAAG,SAAPA,IAAI,CAAIC,MAAM,EAAK;EACvBL,MAAM,CAACM,MAAM,CAAIJ,QAAQ,sBAAoB,CAACK,IAAI,CAAC,UAAAC,UAAU,EAAI;IAC/DC,MAAM,GAAGD,UAAU,CAACE,MAAM,CAACT,OAAO;IAClCU,OAAO,GAAGH,UAAU,CAACE,MAAM,CAACE,aAAa;IACzCP,MAAM,CAACG,UAAU,CAACE,MAAM,CAACG,UAAU,CAAC;EACtC,CAAC,CAAC;AACJ,CAAC;AAED,IAAMC,KAAK,GAAG,SAARA,KAAK,GAAS;EAClB,OAAQC,QAAQ,CAACC,EAAE,KAAK,KAAK;AAC/B,CAAC;AAED,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;EACvB,OAAOC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM,GAAGF,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACE,KAAK;AACzE,CAAC;AAED,IAAMC,KAAK,GAAG,SAARA,KAAK,GAAS;EAClB,OAAOP,QAAQ,CAACC,EAAE;AACpB,CAAC;AAED,IAAMO,aAAa,GAAG,SAAhBA,aAAa,GAAS;EAC1B,OAAOtB,OAAO;AAChB,CAAC;AAED,IAAMuB,UAAU,GAAG,SAAbA,UAAU,GAAS;EACvB,OAAOrB,UAAU,CAACsB,GAAG;AACvB,CAAC;AAED,eAAe;EAAErB,IAAI,EAAJA,IAAI;EAAEU,KAAK,EAALA,KAAK;EAAEG,UAAU,EAAVA,UAAU;EAAEK,KAAK,EAALA,KAAK;EAAEC,aAAa,EAAbA,aAAa;EAAEC,UAAU,EAAVA;AAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}